{"version":3,"sources":["../node_modules/create-react-context/lib/implementation.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/extends.js","../node_modules/@babel/runtime/helpers/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/defineProperty.js","../node_modules/reactstrap/es/Button.js","../node_modules/warning/warning.js","../node_modules/create-react-context/lib/index.js","../node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js","../node_modules/popper.js/dist/esm/popper.js"],"names":["exports","__esModule","_react","__webpack_require__","_propTypes2","_interopRequireDefault","_gud2","obj","default","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","MAX_SIGNED_31_BIT_INT","defaultValue","calculateChangedBits","_Provider$childContex","_Consumer$contextType","contextProp","Provider","_Component","_temp","_this","this","_len","arguments","length","args","Array","_key","apply","concat","emitter","handlers","on","handler","push","off","filter","h","get","set","newValue","changedBits","forEach","createEventEmitter","props","getChildContext","_ref","componentWillReceiveProps","nextProps","oldValue","x","y","render","children","Component","childContextTypes","object","isRequired","Consumer","_Component2","_temp2","_this2","_len2","_key2","state","getValue","onUpdate","observedBits","setState","undefined","componentDidMount","context","componentWillUnmount","isArray","contextTypes","module","_assertThisInitialized","d","__webpack_exports__","_extends","assign","target","i","source","key","hasOwnProperty","defineProperty","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__","_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_3__","react__WEBPACK_IMPORTED_MODULE_4__","react__WEBPACK_IMPORTED_MODULE_4___default","n","prop_types__WEBPACK_IMPORTED_MODULE_5__","prop_types__WEBPACK_IMPORTED_MODULE_5___default","classnames__WEBPACK_IMPORTED_MODULE_6__","classnames__WEBPACK_IMPORTED_MODULE_6___default","_utils__WEBPACK_IMPORTED_MODULE_7__","propTypes","active","a","bool","aria-label","string","block","color","disabled","outline","tag","innerRef","oneOfType","func","onClick","size","node","className","cssModule","close","Button","_React$Component","bind","_proto","e","preventDefault","_this$props","ariaLabel","Tag","attributes","createElement","aria-hidden","btnOutlineColor","classes","href","defaultAriaLabel","type","ref","defaultProps","warning","_react2","_implementation2","createContext","excluded","sourceKeys","keys","indexOf","r","global","isBrowser","window","document","navigator","timeoutDuration","longerTimeoutBrowsers","userAgent","debounce","Promise","fn","called","resolve","then","scheduled","setTimeout","isFunction","functionToCheck","toString","getStyleComputedProperty","element","property","nodeType","css","ownerDocument","defaultView","getComputedStyle","getParentNode","nodeName","parentNode","host","getScrollParent","body","_getStyleComputedProp","overflow","overflowX","overflowY","test","getReferenceNode","reference","referenceNode","isIE11","MSInputMethodContext","documentMode","isIE10","isIE","version","getOffsetParent","documentElement","noOffsetParent","offsetParent","nextElementSibling","getRoot","findCommonOffsetParent","element1","element2","order","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","start","end","range","createRange","setStart","setEnd","commonAncestorContainer","contains","firstElementChild","isOffsetContainer","element1root","getScroll","upperSide","html","scrollingElement","getBordersSize","styles","axis","sideA","sideB","parseFloat","getSize","computedStyle","Math","max","parseInt","getWindowSizes","height","width","classCallCheck","createClass","defineProperties","descriptor","protoProps","staticProps","getClientRect","offsets","right","left","bottom","top","getBoundingClientRect","rect","scrollTop","scrollLeft","result","sizes","clientWidth","clientHeight","horizScrollbar","offsetWidth","vertScrollbar","offsetHeight","getOffsetRectRelativeToArbitraryNode","parent","fixedPosition","isHTML","childrenRect","parentRect","scrollParent","borderTopWidth","borderLeftWidth","marginTop","marginLeft","subtract","modifier","includeScroll","getFixedPositionOffsetParent","parentElement","el","getBoundaries","popper","padding","boundariesElement","boundaries","excludeScroll","relativeOffset","innerWidth","innerHeight","getViewportOffsetRectRelativeToArtbitraryNode","boundariesNode","isFixed","_getWindowSizes","isPaddingNumber","computeAutoPlacement","placement","refRect","rects","sortedAreas","map","area","sort","b","filteredAreas","_ref2","computedPlacement","variation","split","getReferenceOffsets","getOuterSizes","marginBottom","marginRight","getOppositePlacement","hash","replace","matched","getPopperOffsets","referenceOffsets","popperRect","popperOffsets","isHoriz","mainSide","secondarySide","measurement","secondaryMeasurement","find","arr","check","runModifiers","modifiers","data","ends","slice","prop","findIndex","cur","match","console","warn","enabled","isModifierEnabled","modifierName","some","name","getSupportedPropertyName","prefixes","upperProp","charAt","toUpperCase","prefix","toCheck","style","getWindow","setupEventListeners","options","updateBound","addEventListener","passive","scrollElement","attachToScrollParents","event","callback","scrollParents","isBody","eventsEnabled","disableEventListeners","cancelAnimationFrame","scheduleUpdate","removeEventListener","isNumeric","isNaN","isFinite","setStyles","unit","isFirefox","isModifierRequired","requestingName","requestedName","requesting","_requesting","requested","placements","validPlacements","clockwise","counter","index","reverse","BEHAVIORS","FLIP","CLOCKWISE","COUNTERCLOCKWISE","parseOffset","offset","basePlacement","useHeight","fragments","frag","trim","divider","search","splitRegex","ops","op","mergeWithPrevious","reduce","str","toValue","index2","Defaults","positionFixed","removeOnDestroy","onCreate","shift","shiftvariation","_data$offsets","isVertical","side","shiftOffsets","preventOverflow","transformProp","popperStyles","transform","priority","primary","escapeWithReference","secondary","min","keepTogether","floor","opSide","arrow","_data$offsets$arrow","arrowElement","querySelector","len","sideCapitalized","toLowerCase","altSide","arrowElementSize","center","popperMarginSide","popperBorderSide","sideValue","round","flip","flipped","originalPlacement","placementOpposite","flipOrder","behavior","step","refOffsets","overlapsRef","overflowsLeft","overflowsRight","overflowsTop","overflowsBottom","overflowsBoundaries","flippedVariationByRef","flipVariations","flippedVariationByContent","flipVariationsByContent","flippedVariation","getOppositeVariation","inner","subtractLength","hide","bound","computeStyle","legacyGpuAccelerationOption","gpuAcceleration","offsetParentRect","position","shouldRound","noRound","v","referenceWidth","popperWidth","isVariation","horizontalToInteger","verticalToInteger","getRoundedOffsets","devicePixelRatio","prefixedProperty","willChange","invertTop","invertLeft","x-placement","arrowStyles","applyStyle","setAttribute","removeAttribute","onLoad","modifierOptions","Popper","requestAnimationFrame","update","isDestroyed","isCreated","jquery","enableEventListeners","removeChild","Utils","PopperUtils"],"mappings":"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","file":"static/js/2.88e3b875.chunk.js","sourcesContent":["'use strict';\n\nexports.__esModule = true;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _gud = require('gud');\n\nvar _gud2 = _interopRequireDefault(_gud);\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar MAX_SIGNED_31_BIT_INT = 1073741823; // Inlined Object.is polyfill.\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n\nfunction objectIs(x, y) {\n  if (x === y) {\n    return x !== 0 || 1 / x === 1 / y;\n  } else {\n    return x !== x && y !== y;\n  }\n}\n\nfunction createEventEmitter(value) {\n  var handlers = [];\n  return {\n    on: function on(handler) {\n      handlers.push(handler);\n    },\n    off: function off(handler) {\n      handlers = handlers.filter(function (h) {\n        return h !== handler;\n      });\n    },\n    get: function get() {\n      return value;\n    },\n    set: function set(newValue, changedBits) {\n      value = newValue;\n      handlers.forEach(function (handler) {\n        return handler(value, changedBits);\n      });\n    }\n  };\n}\n\nfunction onlyChild(children) {\n  return Array.isArray(children) ? children[0] : children;\n}\n\nfunction createReactContext(defaultValue, calculateChangedBits) {\n  var _Provider$childContex, _Consumer$contextType;\n\n  var contextProp = '__create-react-context-' + (0, _gud2.default)() + '__';\n\n  var Provider = function (_Component) {\n    _inherits(Provider, _Component);\n\n    function Provider() {\n      var _temp, _this, _ret;\n\n      _classCallCheck(this, Provider);\n\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return _ret = (_temp = (_this = _possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.emitter = createEventEmitter(_this.props.value), _temp), _possibleConstructorReturn(_this, _ret);\n    }\n\n    Provider.prototype.getChildContext = function getChildContext() {\n      var _ref;\n\n      return _ref = {}, _ref[contextProp] = this.emitter, _ref;\n    };\n\n    Provider.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n      if (this.props.value !== nextProps.value) {\n        var oldValue = this.props.value;\n        var newValue = nextProps.value;\n        var changedBits = void 0;\n\n        if (objectIs(oldValue, newValue)) {\n          changedBits = 0; // No change\n        } else {\n          changedBits = typeof calculateChangedBits === 'function' ? calculateChangedBits(oldValue, newValue) : MAX_SIGNED_31_BIT_INT;\n\n          if (process.env.NODE_ENV !== 'production') {\n            (0, _warning2.default)((changedBits & MAX_SIGNED_31_BIT_INT) === changedBits, 'calculateChangedBits: Expected the return value to be a ' + '31-bit integer. Instead received: %s', changedBits);\n          }\n\n          changedBits |= 0;\n\n          if (changedBits !== 0) {\n            this.emitter.set(nextProps.value, changedBits);\n          }\n        }\n      }\n    };\n\n    Provider.prototype.render = function render() {\n      return this.props.children;\n    };\n\n    return Provider;\n  }(_react.Component);\n\n  Provider.childContextTypes = (_Provider$childContex = {}, _Provider$childContex[contextProp] = _propTypes2.default.object.isRequired, _Provider$childContex);\n\n  var Consumer = function (_Component2) {\n    _inherits(Consumer, _Component2);\n\n    function Consumer() {\n      var _temp2, _this2, _ret2;\n\n      _classCallCheck(this, Consumer);\n\n      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      return _ret2 = (_temp2 = (_this2 = _possibleConstructorReturn(this, _Component2.call.apply(_Component2, [this].concat(args))), _this2), _this2.state = {\n        value: _this2.getValue()\n      }, _this2.onUpdate = function (newValue, changedBits) {\n        var observedBits = _this2.observedBits | 0;\n\n        if ((observedBits & changedBits) !== 0) {\n          _this2.setState({\n            value: _this2.getValue()\n          });\n        }\n      }, _temp2), _possibleConstructorReturn(_this2, _ret2);\n    }\n\n    Consumer.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n      var observedBits = nextProps.observedBits;\n      this.observedBits = observedBits === undefined || observedBits === null ? MAX_SIGNED_31_BIT_INT // Subscribe to all changes by default\n      : observedBits;\n    };\n\n    Consumer.prototype.componentDidMount = function componentDidMount() {\n      if (this.context[contextProp]) {\n        this.context[contextProp].on(this.onUpdate);\n      }\n\n      var observedBits = this.props.observedBits;\n      this.observedBits = observedBits === undefined || observedBits === null ? MAX_SIGNED_31_BIT_INT // Subscribe to all changes by default\n      : observedBits;\n    };\n\n    Consumer.prototype.componentWillUnmount = function componentWillUnmount() {\n      if (this.context[contextProp]) {\n        this.context[contextProp].off(this.onUpdate);\n      }\n    };\n\n    Consumer.prototype.getValue = function getValue() {\n      if (this.context[contextProp]) {\n        return this.context[contextProp].get();\n      } else {\n        return defaultValue;\n      }\n    };\n\n    Consumer.prototype.render = function render() {\n      return onlyChild(this.props.children)(this.state.value);\n    };\n\n    return Consumer;\n  }(_react.Component);\n\n  Consumer.contextTypes = (_Consumer$contextType = {}, _Consumer$contextType[contextProp] = _propTypes2.default.object, _Consumer$contextType);\n  return {\n    Provider: Provider,\n    Consumer: Consumer\n  };\n}\n\nexports.default = createReactContext;\nmodule.exports = exports['default'];","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","function _extends() {\n  module.exports = _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nmodule.exports = _extends;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  active: PropTypes.bool,\n  'aria-label': PropTypes.string,\n  block: PropTypes.bool,\n  color: PropTypes.string,\n  disabled: PropTypes.bool,\n  outline: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  onClick: PropTypes.func,\n  size: PropTypes.string,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  close: PropTypes.bool\n};\nvar defaultProps = {\n  color: 'secondary',\n  tag: 'button'\n};\n\nvar Button =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Button, _React$Component);\n\n  function Button(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.onClick = _this.onClick.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Button.prototype;\n\n  _proto.onClick = function onClick(e) {\n    if (this.props.disabled) {\n      e.preventDefault();\n      return;\n    }\n\n    if (this.props.onClick) {\n      this.props.onClick(e);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        active = _this$props.active,\n        ariaLabel = _this$props['aria-label'],\n        block = _this$props.block,\n        className = _this$props.className,\n        close = _this$props.close,\n        cssModule = _this$props.cssModule,\n        color = _this$props.color,\n        outline = _this$props.outline,\n        size = _this$props.size,\n        Tag = _this$props.tag,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, [\"active\", \"aria-label\", \"block\", \"className\", \"close\", \"cssModule\", \"color\", \"outline\", \"size\", \"tag\", \"innerRef\"]);\n\n    if (close && typeof attributes.children === 'undefined') {\n      attributes.children = React.createElement(\"span\", {\n        \"aria-hidden\": true\n      }, \"\\xD7\");\n    }\n\n    var btnOutlineColor = \"btn\" + (outline ? '-outline' : '') + \"-\" + color;\n    var classes = mapToCssModules(classNames(className, {\n      close: close\n    }, close || 'btn', close || btnOutlineColor, size ? \"btn-\" + size : false, block ? 'btn-block' : false, {\n      active: active,\n      disabled: this.props.disabled\n    }), cssModule);\n\n    if (attributes.href && Tag === 'button') {\n      Tag = 'a';\n    }\n\n    var defaultAriaLabel = close ? 'Close' : null;\n    return React.createElement(Tag, _extends({\n      type: Tag === 'button' && attributes.onClick ? 'button' : undefined\n    }, attributes, {\n      className: classes,\n      ref: innerRef,\n      onClick: this.onClick,\n      \"aria-label\": ariaLabel || defaultAriaLabel\n    }));\n  };\n\n  return Button;\n}(React.Component);\n\nButton.propTypes = propTypes;\nButton.defaultProps = defaultProps;\nexport default Button;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nvar warning = function warning() {};\n\nif (__DEV__) {\n  var printWarning = function printWarning(format, args) {\n    var len = arguments.length;\n    args = new Array(len > 1 ? len - 1 : 0);\n\n    for (var key = 1; key < len; key++) {\n      args[key - 1] = arguments[key];\n    }\n\n    var argIndex = 0;\n    var message = 'Warning: ' + format.replace(/%s/g, function () {\n      return args[argIndex++];\n    });\n\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n\n  warning = function warning(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n\n    if (format === undefined) {\n      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');\n    }\n\n    if (!condition) {\n      printWarning.apply(null, [format].concat(args));\n    }\n  };\n}\n\nmodule.exports = warning;","'use strict';\n\nexports.__esModule = true;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _implementation = require('./implementation');\n\nvar _implementation2 = _interopRequireDefault(_implementation);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nexports.default = _react2.default.createContext || _implementation2.default;\nmodule.exports = exports['default'];","function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutPropertiesLoose;","/**!\n * @fileOverview Kickass library to create and place poppers near their reference elements.\n * @version 1.16.0\n * @license\n * Copyright (c) 2016 Federico Zivolo and contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && typeof navigator !== 'undefined';\n\nvar timeoutDuration = function () {\n  var longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\n\n  for (var i = 0; i < longerTimeoutBrowsers.length; i += 1) {\n    if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\n      return 1;\n    }\n  }\n\n  return 0;\n}();\n\nfunction microtaskDebounce(fn) {\n  var called = false;\n  return function () {\n    if (called) {\n      return;\n    }\n\n    called = true;\n    window.Promise.resolve().then(function () {\n      called = false;\n      fn();\n    });\n  };\n}\n\nfunction taskDebounce(fn) {\n  var scheduled = false;\n  return function () {\n    if (!scheduled) {\n      scheduled = true;\n      setTimeout(function () {\n        scheduled = false;\n        fn();\n      }, timeoutDuration);\n    }\n  };\n}\n\nvar supportsMicroTasks = isBrowser && window.Promise;\n/**\n* Create a debounced version of a method, that's asynchronously deferred\n* but called in the minimum time possible.\n*\n* @method\n* @memberof Popper.Utils\n* @argument {Function} fn\n* @returns {Function}\n*/\n\nvar debounce = supportsMicroTasks ? microtaskDebounce : taskDebounce;\n/**\n * Check if the given variable is a function\n * @method\n * @memberof Popper.Utils\n * @argument {Any} functionToCheck - variable to check\n * @returns {Boolean} answer to: is a function?\n */\n\nfunction isFunction(functionToCheck) {\n  var getType = {};\n  return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';\n}\n/**\n * Get CSS computed property of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Eement} element\n * @argument {String} property\n */\n\n\nfunction getStyleComputedProperty(element, property) {\n  if (element.nodeType !== 1) {\n    return [];\n  } // NOTE: 1 DOM access here\n\n\n  var window = element.ownerDocument.defaultView;\n  var css = window.getComputedStyle(element, null);\n  return property ? css[property] : css;\n}\n/**\n * Returns the parentNode or the host of the element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} parent\n */\n\n\nfunction getParentNode(element) {\n  if (element.nodeName === 'HTML') {\n    return element;\n  }\n\n  return element.parentNode || element.host;\n}\n/**\n * Returns the scrolling parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} scroll parent\n */\n\n\nfunction getScrollParent(element) {\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n  if (!element) {\n    return document.body;\n  }\n\n  switch (element.nodeName) {\n    case 'HTML':\n    case 'BODY':\n      return element.ownerDocument.body;\n\n    case '#document':\n      return element.body;\n  } // Firefox want us to check `-x` and `-y` variations as well\n\n\n  var _getStyleComputedProp = getStyleComputedProperty(element),\n      overflow = _getStyleComputedProp.overflow,\n      overflowX = _getStyleComputedProp.overflowX,\n      overflowY = _getStyleComputedProp.overflowY;\n\n  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {\n    return element;\n  }\n\n  return getScrollParent(getParentNode(element));\n}\n/**\n * Returns the reference node of the reference object, or the reference object itself.\n * @method\n * @memberof Popper.Utils\n * @param {Element|Object} reference - the reference element (the popper will be relative to this)\n * @returns {Element} parent\n */\n\n\nfunction getReferenceNode(reference) {\n  return reference && reference.referenceNode ? reference.referenceNode : reference;\n}\n\nvar isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);\nvar isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);\n/**\n * Determines if the browser is Internet Explorer\n * @method\n * @memberof Popper.Utils\n * @param {Number} version to check\n * @returns {Boolean} isIE\n */\n\nfunction isIE(version) {\n  if (version === 11) {\n    return isIE11;\n  }\n\n  if (version === 10) {\n    return isIE10;\n  }\n\n  return isIE11 || isIE10;\n}\n/**\n * Returns the offset parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} offset parent\n */\n\n\nfunction getOffsetParent(element) {\n  if (!element) {\n    return document.documentElement;\n  }\n\n  var noOffsetParent = isIE(10) ? document.body : null; // NOTE: 1 DOM access here\n\n  var offsetParent = element.offsetParent || null; // Skip hidden elements which don't have an offsetParent\n\n  while (offsetParent === noOffsetParent && element.nextElementSibling) {\n    offsetParent = (element = element.nextElementSibling).offsetParent;\n  }\n\n  var nodeName = offsetParent && offsetParent.nodeName;\n\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n    return element ? element.ownerDocument.documentElement : document.documentElement;\n  } // .offsetParent will return the closest TH, TD or TABLE in case\n  // no offsetParent is present, I hate this job...\n\n\n  if (['TH', 'TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, 'position') === 'static') {\n    return getOffsetParent(offsetParent);\n  }\n\n  return offsetParent;\n}\n\nfunction isOffsetContainer(element) {\n  var nodeName = element.nodeName;\n\n  if (nodeName === 'BODY') {\n    return false;\n  }\n\n  return nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element;\n}\n/**\n * Finds the root node (document, shadowDOM root) of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} node\n * @returns {Element} root node\n */\n\n\nfunction getRoot(node) {\n  if (node.parentNode !== null) {\n    return getRoot(node.parentNode);\n  }\n\n  return node;\n}\n/**\n * Finds the offset parent common to the two provided nodes\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element1\n * @argument {Element} element2\n * @returns {Element} common offset parent\n */\n\n\nfunction findCommonOffsetParent(element1, element2) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n    return document.documentElement;\n  } // Here we make sure to give as \"start\" the element that comes first in the DOM\n\n\n  var order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;\n  var start = order ? element1 : element2;\n  var end = order ? element2 : element1; // Get common ancestor container\n\n  var range = document.createRange();\n  range.setStart(start, 0);\n  range.setEnd(end, 0);\n  var commonAncestorContainer = range.commonAncestorContainer; // Both nodes are inside #document\n\n  if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {\n    if (isOffsetContainer(commonAncestorContainer)) {\n      return commonAncestorContainer;\n    }\n\n    return getOffsetParent(commonAncestorContainer);\n  } // one of the nodes is inside shadowDOM, find which one\n\n\n  var element1root = getRoot(element1);\n\n  if (element1root.host) {\n    return findCommonOffsetParent(element1root.host, element2);\n  } else {\n    return findCommonOffsetParent(element1, getRoot(element2).host);\n  }\n}\n/**\n * Gets the scroll value of the given element in the given side (top and left)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {String} side `top` or `left`\n * @returns {number} amount of scrolled pixels\n */\n\n\nfunction getScroll(element) {\n  var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top';\n  var upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n  var nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    var html = element.ownerDocument.documentElement;\n    var scrollingElement = element.ownerDocument.scrollingElement || html;\n    return scrollingElement[upperSide];\n  }\n\n  return element[upperSide];\n}\n/*\n * Sum or subtract the element scroll values (left and top) from a given rect object\n * @method\n * @memberof Popper.Utils\n * @param {Object} rect - Rect object you want to change\n * @param {HTMLElement} element - The element from the function reads the scroll values\n * @param {Boolean} subtract - set to true if you want to subtract the scroll values\n * @return {Object} rect - The modifier rect object\n */\n\n\nfunction includeScroll(rect, element) {\n  var subtract = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var scrollTop = getScroll(element, 'top');\n  var scrollLeft = getScroll(element, 'left');\n  var modifier = subtract ? -1 : 1;\n  rect.top += scrollTop * modifier;\n  rect.bottom += scrollTop * modifier;\n  rect.left += scrollLeft * modifier;\n  rect.right += scrollLeft * modifier;\n  return rect;\n}\n/*\n * Helper to detect borders of a given element\n * @method\n * @memberof Popper.Utils\n * @param {CSSStyleDeclaration} styles\n * Result of `getStyleComputedProperty` on the given element\n * @param {String} axis - `x` or `y`\n * @return {number} borders - The borders size of the given axis\n */\n\n\nfunction getBordersSize(styles, axis) {\n  var sideA = axis === 'x' ? 'Left' : 'Top';\n  var sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n  return parseFloat(styles['border' + sideA + 'Width'], 10) + parseFloat(styles['border' + sideB + 'Width'], 10);\n}\n\nfunction getSize(axis, body, html, computedStyle) {\n  return Math.max(body['offset' + axis], body['scroll' + axis], html['client' + axis], html['offset' + axis], html['scroll' + axis], isIE(10) ? parseInt(html['offset' + axis]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Top' : 'Left')]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Bottom' : 'Right')]) : 0);\n}\n\nfunction getWindowSizes(document) {\n  var body = document.body;\n  var html = document.documentElement;\n  var computedStyle = isIE(10) && getComputedStyle(html);\n  return {\n    height: getSize('Height', body, html, computedStyle),\n    width: getSize('Width', body, html, computedStyle)\n  };\n}\n\nvar classCallCheck = function classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar defineProperty = function defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n/**\n * Given element offsets, generate an output similar to getBoundingClientRect\n * @method\n * @memberof Popper.Utils\n * @argument {Object} offsets\n * @returns {Object} ClientRect like output\n */\n\n\nfunction getClientRect(offsets) {\n  return _extends({}, offsets, {\n    right: offsets.left + offsets.width,\n    bottom: offsets.top + offsets.height\n  });\n}\n/**\n * Get bounding client rect of given element\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} element\n * @return {Object} client rect\n */\n\n\nfunction getBoundingClientRect(element) {\n  var rect = {}; // IE10 10 FIX: Please, don't ask, the element isn't\n  // considered in DOM in some circumstances...\n  // This isn't reproducible in IE10 compatibility mode of IE11\n\n  try {\n    if (isIE(10)) {\n      rect = element.getBoundingClientRect();\n      var scrollTop = getScroll(element, 'top');\n      var scrollLeft = getScroll(element, 'left');\n      rect.top += scrollTop;\n      rect.left += scrollLeft;\n      rect.bottom += scrollTop;\n      rect.right += scrollLeft;\n    } else {\n      rect = element.getBoundingClientRect();\n    }\n  } catch (e) {}\n\n  var result = {\n    left: rect.left,\n    top: rect.top,\n    width: rect.right - rect.left,\n    height: rect.bottom - rect.top\n  }; // subtract scrollbar size from sizes\n\n  var sizes = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : {};\n  var width = sizes.width || element.clientWidth || result.width;\n  var height = sizes.height || element.clientHeight || result.height;\n  var horizScrollbar = element.offsetWidth - width;\n  var vertScrollbar = element.offsetHeight - height; // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n  // we make this check conditional for performance reasons\n\n  if (horizScrollbar || vertScrollbar) {\n    var styles = getStyleComputedProperty(element);\n    horizScrollbar -= getBordersSize(styles, 'x');\n    vertScrollbar -= getBordersSize(styles, 'y');\n    result.width -= horizScrollbar;\n    result.height -= vertScrollbar;\n  }\n\n  return getClientRect(result);\n}\n\nfunction getOffsetRectRelativeToArbitraryNode(children, parent) {\n  var fixedPosition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var isIE10 = isIE(10);\n  var isHTML = parent.nodeName === 'HTML';\n  var childrenRect = getBoundingClientRect(children);\n  var parentRect = getBoundingClientRect(parent);\n  var scrollParent = getScrollParent(children);\n  var styles = getStyleComputedProperty(parent);\n  var borderTopWidth = parseFloat(styles.borderTopWidth, 10);\n  var borderLeftWidth = parseFloat(styles.borderLeftWidth, 10); // In cases where the parent is fixed, we must ignore negative scroll in offset calc\n\n  if (fixedPosition && isHTML) {\n    parentRect.top = Math.max(parentRect.top, 0);\n    parentRect.left = Math.max(parentRect.left, 0);\n  }\n\n  var offsets = getClientRect({\n    top: childrenRect.top - parentRect.top - borderTopWidth,\n    left: childrenRect.left - parentRect.left - borderLeftWidth,\n    width: childrenRect.width,\n    height: childrenRect.height\n  });\n  offsets.marginTop = 0;\n  offsets.marginLeft = 0; // Subtract margins of documentElement in case it's being used as parent\n  // we do this only on HTML because it's the only element that behaves\n  // differently when margins are applied to it. The margins are included in\n  // the box of the documentElement, in the other cases not.\n\n  if (!isIE10 && isHTML) {\n    var marginTop = parseFloat(styles.marginTop, 10);\n    var marginLeft = parseFloat(styles.marginLeft, 10);\n    offsets.top -= borderTopWidth - marginTop;\n    offsets.bottom -= borderTopWidth - marginTop;\n    offsets.left -= borderLeftWidth - marginLeft;\n    offsets.right -= borderLeftWidth - marginLeft; // Attach marginTop and marginLeft because in some circumstances we may need them\n\n    offsets.marginTop = marginTop;\n    offsets.marginLeft = marginLeft;\n  }\n\n  if (isIE10 && !fixedPosition ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== 'BODY') {\n    offsets = includeScroll(offsets, parent);\n  }\n\n  return offsets;\n}\n\nfunction getViewportOffsetRectRelativeToArtbitraryNode(element) {\n  var excludeScroll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var html = element.ownerDocument.documentElement;\n  var relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n  var width = Math.max(html.clientWidth, window.innerWidth || 0);\n  var height = Math.max(html.clientHeight, window.innerHeight || 0);\n  var scrollTop = !excludeScroll ? getScroll(html) : 0;\n  var scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;\n  var offset = {\n    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\n    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\n    width: width,\n    height: height\n  };\n  return getClientRect(offset);\n}\n/**\n * Check if the given element is fixed or is inside a fixed parent\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {Element} customContainer\n * @returns {Boolean} answer to \"isFixed?\"\n */\n\n\nfunction isFixed(element) {\n  var nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    return false;\n  }\n\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\n    return true;\n  }\n\n  var parentNode = getParentNode(element);\n\n  if (!parentNode) {\n    return false;\n  }\n\n  return isFixed(parentNode);\n}\n/**\n * Finds the first parent of an element that has a transformed property defined\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} first transformed parent or documentElement\n */\n\n\nfunction getFixedPositionOffsetParent(element) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element || !element.parentElement || isIE()) {\n    return document.documentElement;\n  }\n\n  var el = element.parentElement;\n\n  while (el && getStyleComputedProperty(el, 'transform') === 'none') {\n    el = el.parentElement;\n  }\n\n  return el || document.documentElement;\n}\n/**\n * Computed the boundaries limits and return them\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} popper\n * @param {HTMLElement} reference\n * @param {number} padding\n * @param {HTMLElement} boundariesElement - Element used to define the boundaries\n * @param {Boolean} fixedPosition - Is in fixed position mode\n * @returns {Object} Coordinates of the boundaries\n */\n\n\nfunction getBoundaries(popper, reference, padding, boundariesElement) {\n  var fixedPosition = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false; // NOTE: 1 DOM access here\n\n  var boundaries = {\n    top: 0,\n    left: 0\n  };\n  var offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference)); // Handle viewport case\n\n  if (boundariesElement === 'viewport') {\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);\n  } else {\n    // Handle other cases based on DOM element used as boundaries\n    var boundariesNode = void 0;\n\n    if (boundariesElement === 'scrollParent') {\n      boundariesNode = getScrollParent(getParentNode(reference));\n\n      if (boundariesNode.nodeName === 'BODY') {\n        boundariesNode = popper.ownerDocument.documentElement;\n      }\n    } else if (boundariesElement === 'window') {\n      boundariesNode = popper.ownerDocument.documentElement;\n    } else {\n      boundariesNode = boundariesElement;\n    }\n\n    var offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent, fixedPosition); // In case of HTML, we need a different computation\n\n    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n      var _getWindowSizes = getWindowSizes(popper.ownerDocument),\n          height = _getWindowSizes.height,\n          width = _getWindowSizes.width;\n\n      boundaries.top += offsets.top - offsets.marginTop;\n      boundaries.bottom = height + offsets.top;\n      boundaries.left += offsets.left - offsets.marginLeft;\n      boundaries.right = width + offsets.left;\n    } else {\n      // for all the other DOM elements, this one is good\n      boundaries = offsets;\n    }\n  } // Add paddings\n\n\n  padding = padding || 0;\n  var isPaddingNumber = typeof padding === 'number';\n  boundaries.left += isPaddingNumber ? padding : padding.left || 0;\n  boundaries.top += isPaddingNumber ? padding : padding.top || 0;\n  boundaries.right -= isPaddingNumber ? padding : padding.right || 0;\n  boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0;\n  return boundaries;\n}\n\nfunction getArea(_ref) {\n  var width = _ref.width,\n      height = _ref.height;\n  return width * height;\n}\n/**\n * Utility used to transform the `auto` placement to the placement with more\n * available space.\n * @method\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\n\n\nfunction computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {\n  var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n\n  if (placement.indexOf('auto') === -1) {\n    return placement;\n  }\n\n  var boundaries = getBoundaries(popper, reference, padding, boundariesElement);\n  var rects = {\n    top: {\n      width: boundaries.width,\n      height: refRect.top - boundaries.top\n    },\n    right: {\n      width: boundaries.right - refRect.right,\n      height: boundaries.height\n    },\n    bottom: {\n      width: boundaries.width,\n      height: boundaries.bottom - refRect.bottom\n    },\n    left: {\n      width: refRect.left - boundaries.left,\n      height: boundaries.height\n    }\n  };\n  var sortedAreas = Object.keys(rects).map(function (key) {\n    return _extends({\n      key: key\n    }, rects[key], {\n      area: getArea(rects[key])\n    });\n  }).sort(function (a, b) {\n    return b.area - a.area;\n  });\n  var filteredAreas = sortedAreas.filter(function (_ref2) {\n    var width = _ref2.width,\n        height = _ref2.height;\n    return width >= popper.clientWidth && height >= popper.clientHeight;\n  });\n  var computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;\n  var variation = placement.split('-')[1];\n  return computedPlacement + (variation ? '-' + variation : '');\n}\n/**\n * Get offsets to the reference element\n * @method\n * @memberof Popper.Utils\n * @param {Object} state\n * @param {Element} popper - the popper element\n * @param {Element} reference - the reference element (the popper will be relative to this)\n * @param {Element} fixedPosition - is in fixed position mode\n * @returns {Object} An object containing the offsets which will be applied to the popper\n */\n\n\nfunction getReferenceOffsets(state, popper, reference) {\n  var fixedPosition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n  var commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference));\n  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);\n}\n/**\n * Get the outer sizes of the given element (offset size + margins)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Object} object containing width and height properties\n */\n\n\nfunction getOuterSizes(element) {\n  var window = element.ownerDocument.defaultView;\n  var styles = window.getComputedStyle(element);\n  var x = parseFloat(styles.marginTop || 0) + parseFloat(styles.marginBottom || 0);\n  var y = parseFloat(styles.marginLeft || 0) + parseFloat(styles.marginRight || 0);\n  var result = {\n    width: element.offsetWidth + y,\n    height: element.offsetHeight + x\n  };\n  return result;\n}\n/**\n * Get the opposite placement of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement\n * @returns {String} flipped placement\n */\n\n\nfunction getOppositePlacement(placement) {\n  var hash = {\n    left: 'right',\n    right: 'left',\n    bottom: 'top',\n    top: 'bottom'\n  };\n  return placement.replace(/left|right|bottom|top/g, function (matched) {\n    return hash[matched];\n  });\n}\n/**\n * Get offsets to the popper\n * @method\n * @memberof Popper.Utils\n * @param {Object} position - CSS position the Popper will get applied\n * @param {HTMLElement} popper - the popper element\n * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\n * @param {String} placement - one of the valid placement options\n * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\n */\n\n\nfunction getPopperOffsets(popper, referenceOffsets, placement) {\n  placement = placement.split('-')[0]; // Get popper node sizes\n\n  var popperRect = getOuterSizes(popper); // Add position, width and height to our offsets object\n\n  var popperOffsets = {\n    width: popperRect.width,\n    height: popperRect.height\n  }; // depending by the popper placement we have to compute its offsets slightly differently\n\n  var isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n  var mainSide = isHoriz ? 'top' : 'left';\n  var secondarySide = isHoriz ? 'left' : 'top';\n  var measurement = isHoriz ? 'height' : 'width';\n  var secondaryMeasurement = !isHoriz ? 'height' : 'width';\n  popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;\n\n  if (placement === secondarySide) {\n    popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\n  } else {\n    popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];\n  }\n\n  return popperOffsets;\n}\n/**\n * Mimics the `find` method of Array\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\n\n\nfunction find(arr, check) {\n  // use native find if supported\n  if (Array.prototype.find) {\n    return arr.find(check);\n  } // use `filter` to obtain the same behavior of `find`\n\n\n  return arr.filter(check)[0];\n}\n/**\n * Return the index of the matching object\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\n\n\nfunction findIndex(arr, prop, value) {\n  // use native findIndex if supported\n  if (Array.prototype.findIndex) {\n    return arr.findIndex(function (cur) {\n      return cur[prop] === value;\n    });\n  } // use `find` + `indexOf` if `findIndex` isn't supported\n\n\n  var match = find(arr, function (obj) {\n    return obj[prop] === value;\n  });\n  return arr.indexOf(match);\n}\n/**\n * Loop trough the list of modifiers and run them in order,\n * each of them will then edit the data object.\n * @method\n * @memberof Popper.Utils\n * @param {dataObject} data\n * @param {Array} modifiers\n * @param {String} ends - Optional modifier name used as stopper\n * @returns {dataObject}\n */\n\n\nfunction runModifiers(modifiers, data, ends) {\n  var modifiersToRun = ends === undefined ? modifiers : modifiers.slice(0, findIndex(modifiers, 'name', ends));\n  modifiersToRun.forEach(function (modifier) {\n    if (modifier['function']) {\n      // eslint-disable-line dot-notation\n      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\n    }\n\n    var fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation\n\n    if (modifier.enabled && isFunction(fn)) {\n      // Add properties to offsets to make them a complete clientRect object\n      // we do this before each modifier to make sure the previous one doesn't\n      // mess with these values\n      data.offsets.popper = getClientRect(data.offsets.popper);\n      data.offsets.reference = getClientRect(data.offsets.reference);\n      data = fn(data, modifier);\n    }\n  });\n  return data;\n}\n/**\n * Updates the position of the popper, computing the new offsets and applying\n * the new style.<br />\n * Prefer `scheduleUpdate` over `update` because of performance reasons.\n * @method\n * @memberof Popper\n */\n\n\nfunction update() {\n  // if popper is destroyed, don't perform any further update\n  if (this.state.isDestroyed) {\n    return;\n  }\n\n  var data = {\n    instance: this,\n    styles: {},\n    arrowStyles: {},\n    attributes: {},\n    flipped: false,\n    offsets: {}\n  }; // compute reference element offsets\n\n  data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference, this.options.positionFixed); // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n\n  data.placement = computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding); // store the computed placement inside `originalPlacement`\n\n  data.originalPlacement = data.placement;\n  data.positionFixed = this.options.positionFixed; // compute the popper offsets\n\n  data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement);\n  data.offsets.popper.position = this.options.positionFixed ? 'fixed' : 'absolute'; // run the modifiers\n\n  data = runModifiers(this.modifiers, data); // the first `update` will call `onCreate` callback\n  // the other ones will call `onUpdate` callback\n\n  if (!this.state.isCreated) {\n    this.state.isCreated = true;\n    this.options.onCreate(data);\n  } else {\n    this.options.onUpdate(data);\n  }\n}\n/**\n * Helper used to know if the given modifier is enabled.\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean}\n */\n\n\nfunction isModifierEnabled(modifiers, modifierName) {\n  return modifiers.some(function (_ref) {\n    var name = _ref.name,\n        enabled = _ref.enabled;\n    return enabled && name === modifierName;\n  });\n}\n/**\n * Get the prefixed supported property name\n * @method\n * @memberof Popper.Utils\n * @argument {String} property (camelCase)\n * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)\n */\n\n\nfunction getSupportedPropertyName(property) {\n  var prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];\n  var upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n\n  for (var i = 0; i < prefixes.length; i++) {\n    var prefix = prefixes[i];\n    var toCheck = prefix ? '' + prefix + upperProp : property;\n\n    if (typeof document.body.style[toCheck] !== 'undefined') {\n      return toCheck;\n    }\n  }\n\n  return null;\n}\n/**\n * Destroys the popper.\n * @method\n * @memberof Popper\n */\n\n\nfunction destroy() {\n  this.state.isDestroyed = true; // touch DOM only if `applyStyle` modifier is enabled\n\n  if (isModifierEnabled(this.modifiers, 'applyStyle')) {\n    this.popper.removeAttribute('x-placement');\n    this.popper.style.position = '';\n    this.popper.style.top = '';\n    this.popper.style.left = '';\n    this.popper.style.right = '';\n    this.popper.style.bottom = '';\n    this.popper.style.willChange = '';\n    this.popper.style[getSupportedPropertyName('transform')] = '';\n  }\n\n  this.disableEventListeners(); // remove the popper if user explicitly asked for the deletion on destroy\n  // do not use `remove` because IE11 doesn't support it\n\n  if (this.options.removeOnDestroy) {\n    this.popper.parentNode.removeChild(this.popper);\n  }\n\n  return this;\n}\n/**\n * Get the window associated with the element\n * @argument {Element} element\n * @returns {Window}\n */\n\n\nfunction getWindow(element) {\n  var ownerDocument = element.ownerDocument;\n  return ownerDocument ? ownerDocument.defaultView : window;\n}\n\nfunction attachToScrollParents(scrollParent, event, callback, scrollParents) {\n  var isBody = scrollParent.nodeName === 'BODY';\n  var target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;\n  target.addEventListener(event, callback, {\n    passive: true\n  });\n\n  if (!isBody) {\n    attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents);\n  }\n\n  scrollParents.push(target);\n}\n/**\n * Setup needed event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\n\n\nfunction setupEventListeners(reference, options, state, updateBound) {\n  // Resize event listener on window\n  state.updateBound = updateBound;\n  getWindow(reference).addEventListener('resize', state.updateBound, {\n    passive: true\n  }); // Scroll event listener on scroll parents\n\n  var scrollElement = getScrollParent(reference);\n  attachToScrollParents(scrollElement, 'scroll', state.updateBound, state.scrollParents);\n  state.scrollElement = scrollElement;\n  state.eventsEnabled = true;\n  return state;\n}\n/**\n * It will add resize/scroll events and start recalculating\n * position of the popper element when they are triggered.\n * @method\n * @memberof Popper\n */\n\n\nfunction enableEventListeners() {\n  if (!this.state.eventsEnabled) {\n    this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);\n  }\n}\n/**\n * Remove event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\n\n\nfunction removeEventListeners(reference, state) {\n  // Remove resize event listener on window\n  getWindow(reference).removeEventListener('resize', state.updateBound); // Remove scroll event listener on scroll parents\n\n  state.scrollParents.forEach(function (target) {\n    target.removeEventListener('scroll', state.updateBound);\n  }); // Reset state\n\n  state.updateBound = null;\n  state.scrollParents = [];\n  state.scrollElement = null;\n  state.eventsEnabled = false;\n  return state;\n}\n/**\n * It will remove resize/scroll events and won't recalculate popper position\n * when they are triggered. It also won't trigger `onUpdate` callback anymore,\n * unless you call `update` method manually.\n * @method\n * @memberof Popper\n */\n\n\nfunction disableEventListeners() {\n  if (this.state.eventsEnabled) {\n    cancelAnimationFrame(this.scheduleUpdate);\n    this.state = removeEventListeners(this.reference, this.state);\n  }\n}\n/**\n * Tells if a given input is a number\n * @method\n * @memberof Popper.Utils\n * @param {*} input to check\n * @return {Boolean}\n */\n\n\nfunction isNumeric(n) {\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n}\n/**\n * Set the style to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the style to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\n\n\nfunction setStyles(element, styles) {\n  Object.keys(styles).forEach(function (prop) {\n    var unit = ''; // add unit if the value is numeric and is one of the following\n\n    if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && isNumeric(styles[prop])) {\n      unit = 'px';\n    }\n\n    element.style[prop] = styles[prop] + unit;\n  });\n}\n/**\n * Set the attributes to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the attributes to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\n\n\nfunction setAttributes(element, attributes) {\n  Object.keys(attributes).forEach(function (prop) {\n    var value = attributes[prop];\n\n    if (value !== false) {\n      element.setAttribute(prop, attributes[prop]);\n    } else {\n      element.removeAttribute(prop);\n    }\n  });\n}\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} data.styles - List of style properties - values to apply to popper element\n * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The same data object\n */\n\n\nfunction applyStyle(data) {\n  // any property present in `data.styles` will be applied to the popper,\n  // in this way we can make the 3rd party modifiers add custom styles to it\n  // Be aware, modifiers could override the properties defined in the previous\n  // lines of this modifier!\n  setStyles(data.instance.popper, data.styles); // any property present in `data.attributes` will be applied to the popper,\n  // they will be set as HTML attributes of the element\n\n  setAttributes(data.instance.popper, data.attributes); // if arrowElement is defined and arrowStyles has some properties\n\n  if (data.arrowElement && Object.keys(data.arrowStyles).length) {\n    setStyles(data.arrowElement, data.arrowStyles);\n  }\n\n  return data;\n}\n/**\n * Set the x-placement attribute before everything else because it could be used\n * to add margins to the popper margins needs to be calculated to get the\n * correct popper offsets.\n * @method\n * @memberof Popper.modifiers\n * @param {HTMLElement} reference - The reference element used to position the popper\n * @param {HTMLElement} popper - The HTML element used as popper\n * @param {Object} options - Popper.js options\n */\n\n\nfunction applyStyleOnLoad(reference, popper, options, modifierOptions, state) {\n  // compute reference element offsets\n  var referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed); // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n\n  var placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);\n  popper.setAttribute('x-placement', placement); // Apply `position` to popper before anything else because\n  // without the position applied we can't guarantee correct computations\n\n  setStyles(popper, {\n    position: options.positionFixed ? 'fixed' : 'absolute'\n  });\n  return options;\n}\n/**\n * @function\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Boolean} shouldRound - If the offsets should be rounded at all\n * @returns {Object} The popper's position offsets rounded\n *\n * The tale of pixel-perfect positioning. It's still not 100% perfect, but as\n * good as it can be within reason.\n * Discussion here: https://github.com/FezVrasta/popper.js/pull/715\n *\n * Low DPI screens cause a popper to be blurry if not using full pixels (Safari\n * as well on High DPI screens).\n *\n * Firefox prefers no rounding for positioning and does not have blurriness on\n * high DPI screens.\n *\n * Only horizontal placement and left/right values need to be considered.\n */\n\n\nfunction getRoundedOffsets(data, shouldRound) {\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n  var round = Math.round,\n      floor = Math.floor;\n\n  var noRound = function noRound(v) {\n    return v;\n  };\n\n  var referenceWidth = round(reference.width);\n  var popperWidth = round(popper.width);\n  var isVertical = ['left', 'right'].indexOf(data.placement) !== -1;\n  var isVariation = data.placement.indexOf('-') !== -1;\n  var sameWidthParity = referenceWidth % 2 === popperWidth % 2;\n  var bothOddWidth = referenceWidth % 2 === 1 && popperWidth % 2 === 1;\n  var horizontalToInteger = !shouldRound ? noRound : isVertical || isVariation || sameWidthParity ? round : floor;\n  var verticalToInteger = !shouldRound ? noRound : round;\n  return {\n    left: horizontalToInteger(bothOddWidth && !isVariation && shouldRound ? popper.left - 1 : popper.left),\n    top: verticalToInteger(popper.top),\n    bottom: verticalToInteger(popper.bottom),\n    right: horizontalToInteger(popper.right)\n  };\n}\n\nvar isFirefox = isBrowser && /Firefox/i.test(navigator.userAgent);\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\n\nfunction computeStyle(data, options) {\n  var x = options.x,\n      y = options.y;\n  var popper = data.offsets.popper; // Remove this legacy support in Popper.js v2\n\n  var legacyGpuAccelerationOption = find(data.instance.modifiers, function (modifier) {\n    return modifier.name === 'applyStyle';\n  }).gpuAcceleration;\n\n  if (legacyGpuAccelerationOption !== undefined) {\n    console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');\n  }\n\n  var gpuAcceleration = legacyGpuAccelerationOption !== undefined ? legacyGpuAccelerationOption : options.gpuAcceleration;\n  var offsetParent = getOffsetParent(data.instance.popper);\n  var offsetParentRect = getBoundingClientRect(offsetParent); // Styles\n\n  var styles = {\n    position: popper.position\n  };\n  var offsets = getRoundedOffsets(data, window.devicePixelRatio < 2 || !isFirefox);\n  var sideA = x === 'bottom' ? 'top' : 'bottom';\n  var sideB = y === 'right' ? 'left' : 'right'; // if gpuAcceleration is set to `true` and transform is supported,\n  //  we use `translate3d` to apply the position to the popper we\n  // automatically use the supported prefixed version if needed\n\n  var prefixedProperty = getSupportedPropertyName('transform'); // now, let's make a step back and look at this code closely (wtf?)\n  // If the content of the popper grows once it's been positioned, it\n  // may happen that the popper gets misplaced because of the new content\n  // overflowing its reference element\n  // To avoid this problem, we provide two options (x and y), which allow\n  // the consumer to define the offset origin.\n  // If we position a popper on top of a reference element, we can set\n  // `x` to `top` to make the popper grow towards its top instead of\n  // its bottom.\n\n  var left = void 0,\n      top = void 0;\n\n  if (sideA === 'bottom') {\n    // when offsetParent is <html> the positioning is relative to the bottom of the screen (excluding the scrollbar)\n    // and not the bottom of the html element\n    if (offsetParent.nodeName === 'HTML') {\n      top = -offsetParent.clientHeight + offsets.bottom;\n    } else {\n      top = -offsetParentRect.height + offsets.bottom;\n    }\n  } else {\n    top = offsets.top;\n  }\n\n  if (sideB === 'right') {\n    if (offsetParent.nodeName === 'HTML') {\n      left = -offsetParent.clientWidth + offsets.right;\n    } else {\n      left = -offsetParentRect.width + offsets.right;\n    }\n  } else {\n    left = offsets.left;\n  }\n\n  if (gpuAcceleration && prefixedProperty) {\n    styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';\n    styles[sideA] = 0;\n    styles[sideB] = 0;\n    styles.willChange = 'transform';\n  } else {\n    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties\n    var invertTop = sideA === 'bottom' ? -1 : 1;\n    var invertLeft = sideB === 'right' ? -1 : 1;\n    styles[sideA] = top * invertTop;\n    styles[sideB] = left * invertLeft;\n    styles.willChange = sideA + ', ' + sideB;\n  } // Attributes\n\n\n  var attributes = {\n    'x-placement': data.placement\n  }; // Update `data` attributes, styles and arrowStyles\n\n  data.attributes = _extends({}, attributes, data.attributes);\n  data.styles = _extends({}, styles, data.styles);\n  data.arrowStyles = _extends({}, data.offsets.arrow, data.arrowStyles);\n  return data;\n}\n/**\n * Helper used to know if the given modifier depends from another one.<br />\n * It checks if the needed modifier is listed and enabled.\n * @method\n * @memberof Popper.Utils\n * @param {Array} modifiers - list of modifiers\n * @param {String} requestingName - name of requesting modifier\n * @param {String} requestedName - name of requested modifier\n * @returns {Boolean}\n */\n\n\nfunction isModifierRequired(modifiers, requestingName, requestedName) {\n  var requesting = find(modifiers, function (_ref) {\n    var name = _ref.name;\n    return name === requestingName;\n  });\n  var isRequired = !!requesting && modifiers.some(function (modifier) {\n    return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;\n  });\n\n  if (!isRequired) {\n    var _requesting = '`' + requestingName + '`';\n\n    var requested = '`' + requestedName + '`';\n    console.warn(requested + ' modifier is required by ' + _requesting + ' modifier in order to work, be sure to include it before ' + _requesting + '!');\n  }\n\n  return isRequired;\n}\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\n\n\nfunction arrow(data, options) {\n  var _data$offsets$arrow; // arrow depends on keepTogether in order to work\n\n\n  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {\n    return data;\n  }\n\n  var arrowElement = options.element; // if arrowElement is a string, suppose it's a CSS selector\n\n  if (typeof arrowElement === 'string') {\n    arrowElement = data.instance.popper.querySelector(arrowElement); // if arrowElement is not found, don't run the modifier\n\n    if (!arrowElement) {\n      return data;\n    }\n  } else {\n    // if the arrowElement isn't a query selector we must check that the\n    // provided DOM node is child of its popper node\n    if (!data.instance.popper.contains(arrowElement)) {\n      console.warn('WARNING: `arrow.element` must be child of its popper element!');\n      return data;\n    }\n  }\n\n  var placement = data.placement.split('-')[0];\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n  var isVertical = ['left', 'right'].indexOf(placement) !== -1;\n  var len = isVertical ? 'height' : 'width';\n  var sideCapitalized = isVertical ? 'Top' : 'Left';\n  var side = sideCapitalized.toLowerCase();\n  var altSide = isVertical ? 'left' : 'top';\n  var opSide = isVertical ? 'bottom' : 'right';\n  var arrowElementSize = getOuterSizes(arrowElement)[len]; //\n  // extends keepTogether behavior making sure the popper and its\n  // reference have enough pixels in conjunction\n  //\n  // top/left side\n\n  if (reference[opSide] - arrowElementSize < popper[side]) {\n    data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);\n  } // bottom/right side\n\n\n  if (reference[side] + arrowElementSize > popper[opSide]) {\n    data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];\n  }\n\n  data.offsets.popper = getClientRect(data.offsets.popper); // compute center of the popper\n\n  var center = reference[side] + reference[len] / 2 - arrowElementSize / 2; // Compute the sideValue using the updated popper offsets\n  // take popper margin in account because we don't have this info available\n\n  var css = getStyleComputedProperty(data.instance.popper);\n  var popperMarginSide = parseFloat(css['margin' + sideCapitalized], 10);\n  var popperBorderSide = parseFloat(css['border' + sideCapitalized + 'Width'], 10);\n  var sideValue = center - data.offsets.popper[side] - popperMarginSide - popperBorderSide; // prevent arrowElement from being placed not contiguously to its popper\n\n  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\n  data.arrowElement = arrowElement;\n  data.offsets.arrow = (_data$offsets$arrow = {}, defineProperty(_data$offsets$arrow, side, Math.round(sideValue)), defineProperty(_data$offsets$arrow, altSide, ''), _data$offsets$arrow);\n  return data;\n}\n/**\n * Get the opposite placement variation of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement variation\n * @returns {String} flipped placement variation\n */\n\n\nfunction getOppositeVariation(variation) {\n  if (variation === 'end') {\n    return 'start';\n  } else if (variation === 'start') {\n    return 'end';\n  }\n\n  return variation;\n}\n/**\n * List of accepted placements to use as values of the `placement` option.<br />\n * Valid placements are:\n * - `auto`\n * - `top`\n * - `right`\n * - `bottom`\n * - `left`\n *\n * Each placement can have a variation from this list:\n * - `-start`\n * - `-end`\n *\n * Variations are interpreted easily if you think of them as the left to right\n * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`\n * is right.<br />\n * Vertically (`left` and `right`), `start` is top and `end` is bottom.\n *\n * Some valid examples are:\n * - `top-end` (on top of reference, right aligned)\n * - `right-start` (on right of reference, top aligned)\n * - `bottom` (on bottom, centered)\n * - `auto-end` (on the side with more space available, alignment depends by placement)\n *\n * @static\n * @type {Array}\n * @enum {String}\n * @readonly\n * @method placements\n * @memberof Popper\n */\n\n\nvar placements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start']; // Get rid of `auto` `auto-start` and `auto-end`\n\nvar validPlacements = placements.slice(3);\n/**\n * Given an initial placement, returns all the subsequent placements\n * clockwise (or counter-clockwise).\n *\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement - A valid placement (it accepts variations)\n * @argument {Boolean} counter - Set to true to walk the placements counterclockwise\n * @returns {Array} placements including their variations\n */\n\nfunction clockwise(placement) {\n  var counter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var index = validPlacements.indexOf(placement);\n  var arr = validPlacements.slice(index + 1).concat(validPlacements.slice(0, index));\n  return counter ? arr.reverse() : arr;\n}\n\nvar BEHAVIORS = {\n  FLIP: 'flip',\n  CLOCKWISE: 'clockwise',\n  COUNTERCLOCKWISE: 'counterclockwise'\n};\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\n\nfunction flip(data, options) {\n  // if `inner` modifier is enabled, we can't use the `flip` modifier\n  if (isModifierEnabled(data.instance.modifiers, 'inner')) {\n    return data;\n  }\n\n  if (data.flipped && data.placement === data.originalPlacement) {\n    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\n    return data;\n  }\n\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement, data.positionFixed);\n  var placement = data.placement.split('-')[0];\n  var placementOpposite = getOppositePlacement(placement);\n  var variation = data.placement.split('-')[1] || '';\n  var flipOrder = [];\n\n  switch (options.behavior) {\n    case BEHAVIORS.FLIP:\n      flipOrder = [placement, placementOpposite];\n      break;\n\n    case BEHAVIORS.CLOCKWISE:\n      flipOrder = clockwise(placement);\n      break;\n\n    case BEHAVIORS.COUNTERCLOCKWISE:\n      flipOrder = clockwise(placement, true);\n      break;\n\n    default:\n      flipOrder = options.behavior;\n  }\n\n  flipOrder.forEach(function (step, index) {\n    if (placement !== step || flipOrder.length === index + 1) {\n      return data;\n    }\n\n    placement = data.placement.split('-')[0];\n    placementOpposite = getOppositePlacement(placement);\n    var popperOffsets = data.offsets.popper;\n    var refOffsets = data.offsets.reference; // using floor because the reference offsets may contain decimals we are not going to consider here\n\n    var floor = Math.floor;\n    var overlapsRef = placement === 'left' && floor(popperOffsets.right) > floor(refOffsets.left) || placement === 'right' && floor(popperOffsets.left) < floor(refOffsets.right) || placement === 'top' && floor(popperOffsets.bottom) > floor(refOffsets.top) || placement === 'bottom' && floor(popperOffsets.top) < floor(refOffsets.bottom);\n    var overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\n    var overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\n    var overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\n    var overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom);\n    var overflowsBoundaries = placement === 'left' && overflowsLeft || placement === 'right' && overflowsRight || placement === 'top' && overflowsTop || placement === 'bottom' && overflowsBottom; // flip the variation if required\n\n    var isVertical = ['top', 'bottom'].indexOf(placement) !== -1; // flips variation if reference element overflows boundaries\n\n    var flippedVariationByRef = !!options.flipVariations && (isVertical && variation === 'start' && overflowsLeft || isVertical && variation === 'end' && overflowsRight || !isVertical && variation === 'start' && overflowsTop || !isVertical && variation === 'end' && overflowsBottom); // flips variation if popper content overflows boundaries\n\n    var flippedVariationByContent = !!options.flipVariationsByContent && (isVertical && variation === 'start' && overflowsRight || isVertical && variation === 'end' && overflowsLeft || !isVertical && variation === 'start' && overflowsBottom || !isVertical && variation === 'end' && overflowsTop);\n    var flippedVariation = flippedVariationByRef || flippedVariationByContent;\n\n    if (overlapsRef || overflowsBoundaries || flippedVariation) {\n      // this boolean to detect any flip loop\n      data.flipped = true;\n\n      if (overlapsRef || overflowsBoundaries) {\n        placement = flipOrder[index + 1];\n      }\n\n      if (flippedVariation) {\n        variation = getOppositeVariation(variation);\n      }\n\n      data.placement = placement + (variation ? '-' + variation : ''); // this object contains `position`, we want to preserve it along with\n      // any additional property we may add in the future\n\n      data.offsets.popper = _extends({}, data.offsets.popper, getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));\n      data = runModifiers(data.instance.modifiers, data, 'flip');\n    }\n  });\n  return data;\n}\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\n\n\nfunction keepTogether(data) {\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n  var placement = data.placement.split('-')[0];\n  var floor = Math.floor;\n  var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n  var side = isVertical ? 'right' : 'bottom';\n  var opSide = isVertical ? 'left' : 'top';\n  var measurement = isVertical ? 'width' : 'height';\n\n  if (popper[side] < floor(reference[opSide])) {\n    data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];\n  }\n\n  if (popper[opSide] > floor(reference[side])) {\n    data.offsets.popper[opSide] = floor(reference[side]);\n  }\n\n  return data;\n}\n/**\n * Converts a string containing value + unit into a px value number\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} str - Value + unit string\n * @argument {String} measurement - `height` or `width`\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @returns {Number|String}\n * Value in pixels, or original string if no values were extracted\n */\n\n\nfunction toValue(str, measurement, popperOffsets, referenceOffsets) {\n  // separate value from unit\n  var split = str.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/);\n  var value = +split[1];\n  var unit = split[2]; // If it's not a number it's an operator, I guess\n\n  if (!value) {\n    return str;\n  }\n\n  if (unit.indexOf('%') === 0) {\n    var element = void 0;\n\n    switch (unit) {\n      case '%p':\n        element = popperOffsets;\n        break;\n\n      case '%':\n      case '%r':\n      default:\n        element = referenceOffsets;\n    }\n\n    var rect = getClientRect(element);\n    return rect[measurement] / 100 * value;\n  } else if (unit === 'vh' || unit === 'vw') {\n    // if is a vh or vw, we calculate the size based on the viewport\n    var size = void 0;\n\n    if (unit === 'vh') {\n      size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n    } else {\n      size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n    }\n\n    return size / 100 * value;\n  } else {\n    // if is an explicit pixel unit, we get rid of the unit and keep the value\n    // if is an implicit unit, it's px, and we return just the value\n    return value;\n  }\n}\n/**\n * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} offset\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @argument {String} basePlacement\n * @returns {Array} a two cells array with x and y offsets in numbers\n */\n\n\nfunction parseOffset(offset, popperOffsets, referenceOffsets, basePlacement) {\n  var offsets = [0, 0]; // Use height if placement is left or right and index is 0 otherwise use width\n  // in this way the first offset will use an axis and the second one\n  // will use the other one\n\n  var useHeight = ['right', 'left'].indexOf(basePlacement) !== -1; // Split the offset string to obtain a list of values and operands\n  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)\n\n  var fragments = offset.split(/(\\+|\\-)/).map(function (frag) {\n    return frag.trim();\n  }); // Detect if the offset string contains a pair of values or a single one\n  // they could be separated by comma or space\n\n  var divider = fragments.indexOf(find(fragments, function (frag) {\n    return frag.search(/,|\\s/) !== -1;\n  }));\n\n  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {\n    console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');\n  } // If divider is found, we divide the list of values and operands to divide\n  // them by ofset X and Y.\n\n\n  var splitRegex = /\\s*,\\s*|\\s+/;\n  var ops = divider !== -1 ? [fragments.slice(0, divider).concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider + 1))] : [fragments]; // Convert the values with units to absolute pixels to allow our computations\n\n  ops = ops.map(function (op, index) {\n    // Most of the units rely on the orientation of the popper\n    var measurement = (index === 1 ? !useHeight : useHeight) ? 'height' : 'width';\n    var mergeWithPrevious = false;\n    return op // This aggregates any `+` or `-` sign that aren't considered operators\n    // e.g.: 10 + +5 => [10, +, +5]\n    .reduce(function (a, b) {\n      if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {\n        a[a.length - 1] = b;\n        mergeWithPrevious = true;\n        return a;\n      } else if (mergeWithPrevious) {\n        a[a.length - 1] += b;\n        mergeWithPrevious = false;\n        return a;\n      } else {\n        return a.concat(b);\n      }\n    }, []) // Here we convert the string values into number values (in px)\n    .map(function (str) {\n      return toValue(str, measurement, popperOffsets, referenceOffsets);\n    });\n  }); // Loop trough the offsets arrays and execute the operations\n\n  ops.forEach(function (op, index) {\n    op.forEach(function (frag, index2) {\n      if (isNumeric(frag)) {\n        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);\n      }\n    });\n  });\n  return offsets;\n}\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @argument {Number|String} options.offset=0\n * The offset value as described in the modifier description\n * @returns {Object} The data object, properly modified\n */\n\n\nfunction offset(data, _ref) {\n  var offset = _ref.offset;\n  var placement = data.placement,\n      _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n  var basePlacement = placement.split('-')[0];\n  var offsets = void 0;\n\n  if (isNumeric(+offset)) {\n    offsets = [+offset, 0];\n  } else {\n    offsets = parseOffset(offset, popper, reference, basePlacement);\n  }\n\n  if (basePlacement === 'left') {\n    popper.top += offsets[0];\n    popper.left -= offsets[1];\n  } else if (basePlacement === 'right') {\n    popper.top += offsets[0];\n    popper.left += offsets[1];\n  } else if (basePlacement === 'top') {\n    popper.left += offsets[0];\n    popper.top -= offsets[1];\n  } else if (basePlacement === 'bottom') {\n    popper.left += offsets[0];\n    popper.top += offsets[1];\n  }\n\n  data.popper = popper;\n  return data;\n}\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\n\n\nfunction preventOverflow(data, options) {\n  var boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper); // If offsetParent is the reference element, we really want to\n  // go one step up and use the next offsetParent as reference to\n  // avoid to make this modifier completely useless and look like broken\n\n  if (data.instance.reference === boundariesElement) {\n    boundariesElement = getOffsetParent(boundariesElement);\n  } // NOTE: DOM access here\n  // resets the popper's position so that the document size can be calculated excluding\n  // the size of the popper element itself\n\n\n  var transformProp = getSupportedPropertyName('transform');\n  var popperStyles = data.instance.popper.style; // assignment to help minification\n\n  var top = popperStyles.top,\n      left = popperStyles.left,\n      transform = popperStyles[transformProp];\n  popperStyles.top = '';\n  popperStyles.left = '';\n  popperStyles[transformProp] = '';\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement, data.positionFixed); // NOTE: DOM access here\n  // restores the original style properties after the offsets have been computed\n\n  popperStyles.top = top;\n  popperStyles.left = left;\n  popperStyles[transformProp] = transform;\n  options.boundaries = boundaries;\n  var order = options.priority;\n  var popper = data.offsets.popper;\n  var check = {\n    primary: function primary(placement) {\n      var value = popper[placement];\n\n      if (popper[placement] < boundaries[placement] && !options.escapeWithReference) {\n        value = Math.max(popper[placement], boundaries[placement]);\n      }\n\n      return defineProperty({}, placement, value);\n    },\n    secondary: function secondary(placement) {\n      var mainSide = placement === 'right' ? 'left' : 'top';\n      var value = popper[mainSide];\n\n      if (popper[placement] > boundaries[placement] && !options.escapeWithReference) {\n        value = Math.min(popper[mainSide], boundaries[placement] - (placement === 'right' ? popper.width : popper.height));\n      }\n\n      return defineProperty({}, mainSide, value);\n    }\n  };\n  order.forEach(function (placement) {\n    var side = ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';\n    popper = _extends({}, popper, check[side](placement));\n  });\n  data.offsets.popper = popper;\n  return data;\n}\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\n\n\nfunction shift(data) {\n  var placement = data.placement;\n  var basePlacement = placement.split('-')[0];\n  var shiftvariation = placement.split('-')[1]; // if shift shiftvariation is specified, run the modifier\n\n  if (shiftvariation) {\n    var _data$offsets = data.offsets,\n        reference = _data$offsets.reference,\n        popper = _data$offsets.popper;\n    var isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n    var side = isVertical ? 'left' : 'top';\n    var measurement = isVertical ? 'width' : 'height';\n    var shiftOffsets = {\n      start: defineProperty({}, side, reference[side]),\n      end: defineProperty({}, side, reference[side] + reference[measurement] - popper[measurement])\n    };\n    data.offsets.popper = _extends({}, popper, shiftOffsets[shiftvariation]);\n  }\n\n  return data;\n}\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\n\n\nfunction hide(data) {\n  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {\n    return data;\n  }\n\n  var refRect = data.offsets.reference;\n  var bound = find(data.instance.modifiers, function (modifier) {\n    return modifier.name === 'preventOverflow';\n  }).boundaries;\n\n  if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === true) {\n      return data;\n    }\n\n    data.hide = true;\n    data.attributes['x-out-of-boundaries'] = '';\n  } else {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === false) {\n      return data;\n    }\n\n    data.hide = false;\n    data.attributes['x-out-of-boundaries'] = false;\n  }\n\n  return data;\n}\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\n\n\nfunction inner(data) {\n  var placement = data.placement;\n  var basePlacement = placement.split('-')[0];\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n  var isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\n  var subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;\n  popper[isHoriz ? 'left' : 'top'] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\n  data.placement = getOppositePlacement(placement);\n  data.offsets.popper = getClientRect(popper);\n  return data;\n}\n/**\n * Modifier function, each modifier can have a function of this type assigned\n * to its `fn` property.<br />\n * These functions will be called on each update, this means that you must\n * make sure they are performant enough to avoid performance bottlenecks.\n *\n * @function ModifierFn\n * @argument {dataObject} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {dataObject} The data object, properly modified\n */\n\n/**\n * Modifiers are plugins used to alter the behavior of your poppers.<br />\n * Popper.js uses a set of 9 modifiers to provide all the basic functionalities\n * needed by the library.\n *\n * Usually you don't want to override the `order`, `fn` and `onLoad` props.\n * All the other properties are configurations that could be tweaked.\n * @namespace modifiers\n */\n\n\nvar modifiers = {\n  /**\n   * Modifier used to shift the popper on the start or end of its reference\n   * element.<br />\n   * It will read the variation of the `placement` property.<br />\n   * It can be one either `-end` or `-start`.\n   * @memberof modifiers\n   * @inner\n   */\n  shift: {\n    /** @prop {number} order=100 - Index used to define the order of execution */\n    order: 100,\n\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n\n    /** @prop {ModifierFn} */\n    fn: shift\n  },\n\n  /**\n   * The `offset` modifier can shift your popper on both its axis.\n   *\n   * It accepts the following units:\n   * - `px` or unit-less, interpreted as pixels\n   * - `%` or `%r`, percentage relative to the length of the reference element\n   * - `%p`, percentage relative to the length of the popper element\n   * - `vw`, CSS viewport width unit\n   * - `vh`, CSS viewport height unit\n   *\n   * For length is intended the main axis relative to the placement of the popper.<br />\n   * This means that if the placement is `top` or `bottom`, the length will be the\n   * `width`. In case of `left` or `right`, it will be the `height`.\n   *\n   * You can provide a single value (as `Number` or `String`), or a pair of values\n   * as `String` divided by a comma or one (or more) white spaces.<br />\n   * The latter is a deprecated method because it leads to confusion and will be\n   * removed in v2.<br />\n   * Additionally, it accepts additions and subtractions between different units.\n   * Note that multiplications and divisions aren't supported.\n   *\n   * Valid examples are:\n   * ```\n   * 10\n   * '10%'\n   * '10, 10'\n   * '10%, 10'\n   * '10 + 10%'\n   * '10 - 5vh + 3%'\n   * '-10px + 5vh, 5px - 6%'\n   * ```\n   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap\n   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.\n   * > You can read more on this at this [issue](https://github.com/FezVrasta/popper.js/issues/373).\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  offset: {\n    /** @prop {number} order=200 - Index used to define the order of execution */\n    order: 200,\n\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n\n    /** @prop {ModifierFn} */\n    fn: offset,\n\n    /** @prop {Number|String} offset=0\n     * The offset value as described in the modifier description\n     */\n    offset: 0\n  },\n\n  /**\n   * Modifier used to prevent the popper from being positioned outside the boundary.\n   *\n   * A scenario exists where the reference itself is not within the boundaries.<br />\n   * We can say it has \"escaped the boundaries\" — or just \"escaped\".<br />\n   * In this case we need to decide whether the popper should either:\n   *\n   * - detach from the reference and remain \"trapped\" in the boundaries, or\n   * - if it should ignore the boundary and \"escape with its reference\"\n   *\n   * When `escapeWithReference` is set to`true` and reference is completely\n   * outside its boundaries, the popper will overflow (or completely leave)\n   * the boundaries in order to remain attached to the edge of the reference.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  preventOverflow: {\n    /** @prop {number} order=300 - Index used to define the order of execution */\n    order: 300,\n\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n\n    /** @prop {ModifierFn} */\n    fn: preventOverflow,\n\n    /**\n     * @prop {Array} [priority=['left','right','top','bottom']]\n     * Popper will try to prevent overflow following these priorities by default,\n     * then, it could overflow on the left and on top of the `boundariesElement`\n     */\n    priority: ['left', 'right', 'top', 'bottom'],\n\n    /**\n     * @prop {number} padding=5\n     * Amount of pixel used to define a minimum distance between the boundaries\n     * and the popper. This makes sure the popper always has a little padding\n     * between the edges of its container\n     */\n    padding: 5,\n\n    /**\n     * @prop {String|HTMLElement} boundariesElement='scrollParent'\n     * Boundaries used by the modifier. Can be `scrollParent`, `window`,\n     * `viewport` or any DOM element.\n     */\n    boundariesElement: 'scrollParent'\n  },\n\n  /**\n   * Modifier used to make sure the reference and its popper stay near each other\n   * without leaving any gap between the two. Especially useful when the arrow is\n   * enabled and you want to ensure that it points to its reference element.\n   * It cares only about the first axis. You can still have poppers with margin\n   * between the popper and its reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  keepTogether: {\n    /** @prop {number} order=400 - Index used to define the order of execution */\n    order: 400,\n\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n\n    /** @prop {ModifierFn} */\n    fn: keepTogether\n  },\n\n  /**\n   * This modifier is used to move the `arrowElement` of the popper to make\n   * sure it is positioned between the reference element and its popper element.\n   * It will read the outer size of the `arrowElement` node to detect how many\n   * pixels of conjunction are needed.\n   *\n   * It has no effect if no `arrowElement` is provided.\n   * @memberof modifiers\n   * @inner\n   */\n  arrow: {\n    /** @prop {number} order=500 - Index used to define the order of execution */\n    order: 500,\n\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n\n    /** @prop {ModifierFn} */\n    fn: arrow,\n\n    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */\n    element: '[x-arrow]'\n  },\n\n  /**\n   * Modifier used to flip the popper's placement when it starts to overlap its\n   * reference element.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   *\n   * **NOTE:** this modifier will interrupt the current update cycle and will\n   * restart it if it detects the need to flip the placement.\n   * @memberof modifiers\n   * @inner\n   */\n  flip: {\n    /** @prop {number} order=600 - Index used to define the order of execution */\n    order: 600,\n\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n\n    /** @prop {ModifierFn} */\n    fn: flip,\n\n    /**\n     * @prop {String|Array} behavior='flip'\n     * The behavior used to change the popper's placement. It can be one of\n     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid\n     * placements (with optional variations)\n     */\n    behavior: 'flip',\n\n    /**\n     * @prop {number} padding=5\n     * The popper will flip if it hits the edges of the `boundariesElement`\n     */\n    padding: 5,\n\n    /**\n     * @prop {String|HTMLElement} boundariesElement='viewport'\n     * The element which will define the boundaries of the popper position.\n     * The popper will never be placed outside of the defined boundaries\n     * (except if `keepTogether` is enabled)\n     */\n    boundariesElement: 'viewport',\n\n    /**\n     * @prop {Boolean} flipVariations=false\n     * The popper will switch placement variation between `-start` and `-end` when\n     * the reference element overlaps its boundaries.\n     *\n     * The original placement should have a set variation.\n     */\n    flipVariations: false,\n\n    /**\n     * @prop {Boolean} flipVariationsByContent=false\n     * The popper will switch placement variation between `-start` and `-end` when\n     * the popper element overlaps its reference boundaries.\n     *\n     * The original placement should have a set variation.\n     */\n    flipVariationsByContent: false\n  },\n\n  /**\n   * Modifier used to make the popper flow toward the inner of the reference element.\n   * By default, when this modifier is disabled, the popper will be placed outside\n   * the reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  inner: {\n    /** @prop {number} order=700 - Index used to define the order of execution */\n    order: 700,\n\n    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */\n    enabled: false,\n\n    /** @prop {ModifierFn} */\n    fn: inner\n  },\n\n  /**\n   * Modifier used to hide the popper when its reference element is outside of the\n   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can\n   * be used to hide with a CSS selector the popper when its reference is\n   * out of boundaries.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   * @memberof modifiers\n   * @inner\n   */\n  hide: {\n    /** @prop {number} order=800 - Index used to define the order of execution */\n    order: 800,\n\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n\n    /** @prop {ModifierFn} */\n    fn: hide\n  },\n\n  /**\n   * Computes the style that will be applied to the popper element to gets\n   * properly positioned.\n   *\n   * Note that this modifier will not touch the DOM, it just prepares the styles\n   * so that `applyStyle` modifier can apply it. This separation is useful\n   * in case you need to replace `applyStyle` with a custom implementation.\n   *\n   * This modifier has `850` as `order` value to maintain backward compatibility\n   * with previous versions of Popper.js. Expect the modifiers ordering method\n   * to change in future major versions of the library.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  computeStyle: {\n    /** @prop {number} order=850 - Index used to define the order of execution */\n    order: 850,\n\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n\n    /** @prop {ModifierFn} */\n    fn: computeStyle,\n\n    /**\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: true,\n\n    /**\n     * @prop {string} [x='bottom']\n     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.\n     * Change this if your popper should grow in a direction different from `bottom`\n     */\n    x: 'bottom',\n\n    /**\n     * @prop {string} [x='left']\n     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.\n     * Change this if your popper should grow in a direction different from `right`\n     */\n    y: 'right'\n  },\n\n  /**\n   * Applies the computed styles to the popper element.\n   *\n   * All the DOM manipulations are limited to this modifier. This is useful in case\n   * you want to integrate Popper.js inside a framework or view library and you\n   * want to delegate all the DOM manipulations to it.\n   *\n   * Note that if you disable this modifier, you must make sure the popper element\n   * has its position set to `absolute` before Popper.js can do its work!\n   *\n   * Just disable this modifier and define your own to achieve the desired effect.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  applyStyle: {\n    /** @prop {number} order=900 - Index used to define the order of execution */\n    order: 900,\n\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n\n    /** @prop {ModifierFn} */\n    fn: applyStyle,\n\n    /** @prop {Function} */\n    onLoad: applyStyleOnLoad,\n\n    /**\n     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: undefined\n  }\n};\n/**\n * The `dataObject` is an object containing all the information used by Popper.js.\n * This object is passed to modifiers and to the `onCreate` and `onUpdate` callbacks.\n * @name dataObject\n * @property {Object} data.instance The Popper.js instance\n * @property {String} data.placement Placement applied to popper\n * @property {String} data.originalPlacement Placement originally defined on init\n * @property {Boolean} data.flipped True if popper has been flipped by flip modifier\n * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper\n * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier\n * @property {Object} data.styles Any CSS property defined here will be applied to the popper. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.boundaries Offsets of the popper boundaries\n * @property {Object} data.offsets The measurements of popper, reference and arrow elements\n * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0\n */\n\n/**\n * Default options provided to Popper.js constructor.<br />\n * These can be overridden using the `options` argument of Popper.js.<br />\n * To override an option, simply pass an object with the same\n * structure of the `options` object, as the 3rd argument. For example:\n * ```\n * new Popper(ref, pop, {\n *   modifiers: {\n *     preventOverflow: { enabled: false }\n *   }\n * })\n * ```\n * @type {Object}\n * @static\n * @memberof Popper\n */\n\nvar Defaults = {\n  /**\n   * Popper's placement.\n   * @prop {Popper.placements} placement='bottom'\n   */\n  placement: 'bottom',\n\n  /**\n   * Set this to true if you want popper to position it self in 'fixed' mode\n   * @prop {Boolean} positionFixed=false\n   */\n  positionFixed: false,\n\n  /**\n   * Whether events (resize, scroll) are initially enabled.\n   * @prop {Boolean} eventsEnabled=true\n   */\n  eventsEnabled: true,\n\n  /**\n   * Set to true if you want to automatically remove the popper when\n   * you call the `destroy` method.\n   * @prop {Boolean} removeOnDestroy=false\n   */\n  removeOnDestroy: false,\n\n  /**\n   * Callback called when the popper is created.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onCreate}\n   */\n  onCreate: function onCreate() {},\n\n  /**\n   * Callback called when the popper is updated. This callback is not called\n   * on the initialization/creation of the popper, but only on subsequent\n   * updates.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onUpdate}\n   */\n  onUpdate: function onUpdate() {},\n\n  /**\n   * List of modifiers used to modify the offsets before they are applied to the popper.\n   * They provide most of the functionalities of Popper.js.\n   * @prop {modifiers}\n   */\n  modifiers: modifiers\n};\n/**\n * @callback onCreate\n * @param {dataObject} data\n */\n\n/**\n * @callback onUpdate\n * @param {dataObject} data\n */\n// Utils\n// Methods\n\nvar Popper = function () {\n  /**\n   * Creates a new Popper.js instance.\n   * @class Popper\n   * @param {Element|referenceObject} reference - The reference element used to position the popper\n   * @param {Element} popper - The HTML / XML element used as the popper\n   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)\n   * @return {Object} instance - The generated Popper.js instance\n   */\n  function Popper(reference, popper) {\n    var _this = this;\n\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    classCallCheck(this, Popper);\n\n    this.scheduleUpdate = function () {\n      return requestAnimationFrame(_this.update);\n    }; // make update() debounced, so that it only runs at most once-per-tick\n\n\n    this.update = debounce(this.update.bind(this)); // with {} we create a new object with the options inside it\n\n    this.options = _extends({}, Popper.Defaults, options); // init state\n\n    this.state = {\n      isDestroyed: false,\n      isCreated: false,\n      scrollParents: []\n    }; // get reference and popper elements (allow jQuery wrappers)\n\n    this.reference = reference && reference.jquery ? reference[0] : reference;\n    this.popper = popper && popper.jquery ? popper[0] : popper; // Deep merge modifiers options\n\n    this.options.modifiers = {};\n    Object.keys(_extends({}, Popper.Defaults.modifiers, options.modifiers)).forEach(function (name) {\n      _this.options.modifiers[name] = _extends({}, Popper.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});\n    }); // Refactoring modifiers' list (Object => Array)\n\n    this.modifiers = Object.keys(this.options.modifiers).map(function (name) {\n      return _extends({\n        name: name\n      }, _this.options.modifiers[name]);\n    }) // sort the modifiers by order\n    .sort(function (a, b) {\n      return a.order - b.order;\n    }); // modifiers have the ability to execute arbitrary code when Popper.js get inited\n    // such code is executed in the same order of its modifier\n    // they could add new properties to their options configuration\n    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\n\n    this.modifiers.forEach(function (modifierOptions) {\n      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {\n        modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);\n      }\n    }); // fire the first update to position the popper in the right place\n\n    this.update();\n    var eventsEnabled = this.options.eventsEnabled;\n\n    if (eventsEnabled) {\n      // setup event listeners, they will take care of update the position in specific situations\n      this.enableEventListeners();\n    }\n\n    this.state.eventsEnabled = eventsEnabled;\n  } // We can't use class properties because they don't get listed in the\n  // class prototype and break stuff like Sinon stubs\n\n\n  createClass(Popper, [{\n    key: 'update',\n    value: function update$$1() {\n      return update.call(this);\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy$$1() {\n      return destroy.call(this);\n    }\n  }, {\n    key: 'enableEventListeners',\n    value: function enableEventListeners$$1() {\n      return enableEventListeners.call(this);\n    }\n  }, {\n    key: 'disableEventListeners',\n    value: function disableEventListeners$$1() {\n      return disableEventListeners.call(this);\n    }\n    /**\n     * Schedules an update. It will run on the next UI update available.\n     * @method scheduleUpdate\n     * @memberof Popper\n     */\n\n    /**\n     * Collection of utilities useful when writing custom modifiers.\n     * Starting from version 1.7, this method is available only if you\n     * include `popper-utils.js` before `popper.js`.\n     *\n     * **DEPRECATION**: This way to access PopperUtils is deprecated\n     * and will be removed in v2! Use the PopperUtils module directly instead.\n     * Due to the high instability of the methods contained in Utils, we can't\n     * guarantee them to follow semver. Use them at your own risk!\n     * @static\n     * @private\n     * @type {Object}\n     * @deprecated since version 1.8\n     * @member Utils\n     * @memberof Popper\n     */\n\n  }]);\n  return Popper;\n}();\n/**\n * The `referenceObject` is an object that provides an interface compatible with Popper.js\n * and lets you use it as replacement of a real DOM node.<br />\n * You can use this method to position a popper relatively to a set of coordinates\n * in case you don't have a DOM node to use as reference.\n *\n * ```\n * new Popper(referenceObject, popperNode);\n * ```\n *\n * NB: This feature isn't supported in Internet Explorer 10.\n * @name referenceObject\n * @property {Function} data.getBoundingClientRect\n * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.\n * @property {number} data.clientWidth\n * An ES6 getter that will return the width of the virtual reference element.\n * @property {number} data.clientHeight\n * An ES6 getter that will return the height of the virtual reference element.\n */\n\n\nPopper.Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;\nPopper.placements = placements;\nPopper.Defaults = Defaults;\nexport default Popper;"],"sourceRoot":""}