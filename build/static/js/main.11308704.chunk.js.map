{"version":3,"sources":["constants/actionTypes.js","auth/prepareUserFromToken.js","redux/auth/actions.js","routes.js","App.js","serviceWorker.js","redux/auth/reducers.js","redux/user/reducers.js","redux/company/reducers.js","redux/reducers.js","redux/auth/saga.js","redux/user/saga.js","redux/company/saga.js","redux/sagas.js","redux/store.js","index.js","helpers/authUtils.js","redux/company/actions.js","redux/user/actions.js","auth/setTokenToHeaders.js"],"names":["__webpack_require__","d","__webpack_exports__","LOGIN_USER","LOGIN_USER_SUCCESS","LOGIN_USER_FAILED","REGISTER_USER","REGISTER_USER_SUCCESS","REGISTER_USER_FAILED","LOGOUT_USER","FORGET_PASSWORD","FORGET_PASSWORD_SUCCESS","FORGET_PASSWORD_FAILED","UPDATE_ACCOUNT","UPDATE_ACCOUNT_SUCCESS","UPDATE_ACCOUNT_FAILED","UPDATE_ACCOUNT_FINANCIAL","UPDATE_ACCOUNT_FINANCIAL_SUCCESS","UPDATE_ACCOUNT_FINANCIAL_FAILED","UPDATE_ACCOUNT_CATEGORY","UPDATE_ACCOUNT_CATEGORY_SUCCESS","UPDATE_ACCOUNT_CATEGORY_FAILED","GET_COMPANIES","ADD_COMPANY","ADD_COMPANY_SUCCESS","GET_COMPANY","GET_COMPANY_SUCCESS","CREATE_COLUMN","CREATE_COLUMN_SUCCESS","SET_ACTIVE","UPDATE_COMPANY","ADD_USER","ADD_USER_SUCCESS","ADD_USER_FAILED","GET_USERS","GET_USERS_SUCCESS","GET_USERS_FAILED","GET_USER","GET_USER_SUCCESS","GET_USER_FAILED","DELETE_POLICY","DELETE_POLICY_SUCCESS","DELETE_POLICY_FAILED","DELETE_USER","DELETE_USER_SUCCESS","DELETE_USER_FAILED","CHANGE_PASSWORD","CHANGE_PASSWORD_SUCCESS","CHANGE_PASSWORD_FAILED","ADD_CLIENT","ADD_CLIENT_SUCCESS","ADD_CLIENT_FAILED","GET_CLIENTS","GET_CLIENTS_SUCCESS","GET_CLIENTS_FAILED","GET_CLIENTS_CATEGORY","GET_CLIENTS_CATEGORY_SUCCESS","GET_CLIENTS_CATEGORY_FAILED","GET_CLIENT","GET_CLIENT_SUCCESS","GET_CLIENT_FAILED","DELETE_CLIENT","DELETE_CLIENT_SUCCESS","DELETE_CLIENT_FAILED","GET_SETTING","GET_SETTING_SUCCESS","GET_SETTING_FAILED","ADD_POLICY","ADD_POLICY_SUCCESS","ADD_POLICY_FAILED","GET_POLICY","GET_POLICY_SUCCESS","GET_POLICY_FAILED","UPDATE_POLICY","UPDATE_POLICY_SUCCESS","UPDATE_POLICY_FAILED","UPDATE_CLIENT","UPDATE_CLIENT_SUCCESS","UPDATE_CLIENT_FAILED","jwt","require","setTokenToHeaders","module","exports","token","localStorage","setItem","decode","console","error","loginUser","loginUserSuccess","loginUserFailed","registerUser","registerUserSuccess","registerUserFailed","logoutUser","forgetPasswordSuccess","forgetPasswordFailed","_constants_actionTypes__WEBPACK_IMPORTED_MODULE_0__","username","password","type","payload","user","fullname","email","history","passwordResetStatus","Dashboard","React","lazy","e","then","bind","Users","Promise","all","AddUser","UpdateAccount","ChangePassword","Settings","EditCompany","Clients","AddClient","ViewClient","DeleteClient","log","EditClient","EditPolicy","Login","Logout","ForgetPassword","Register","ConfirmAccount","PrivateRoute","_ref","Component","component","roles","rest","Object","objectWithoutProperties","react_default","a","createElement","react_router","assign","render","props","isUserAuthenticated","to","pathname","state","from","location","loggedInUser","getLoggedInUser","indexOf","role","routes","path","name","route","Route","exact","loading","NonAuthLayout","Loadable","loader","loaded","default","AuthLayout","withLayout","WrappedComponent","HOC","_Component","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","connect","App","getLayout","_this2","react_router_dom","Fragment","map","index","Layout","react","fallback","isAuthenticated","Auth","Boolean","window","hostname","match","INIT_STATE","length","undefined","action","objectSpread","updateAccountSuccess","userAdded","users","changePassword","clients","client","clientAdded","policyAdded","policy","updatePolicySuccess","updateClientSuccess","deleteClientSuccess","updateAccountCategorySuccess","updateAccountFinancialSuccess","setting","companies","company","textarray","outarray","active","Company","_header","headername","text","i","headers","push","newCompany","combineReducers","User","login","logout","register","forgetPassword","watchLoginUser","watchLogoutUser","watchRegisterUser","watchForgetPassword","authSaga","fetchJSON","url","options","fetch","response","status","json","catch","setSession","cookies","Cookies","set","JSON","stringify","remove","_ref$payload","decoded","message","regenerator_default","wrap","_context","prev","next","body","method","Content-Type","call","concat","process","sent","prepareUserFromToken","put","t0","t1","abrupt","stop","_marked","_ref2","_context2","_marked2","_ref3","_ref3$payload","_context3","_marked3","_ref4","_context4","_marked4","_context5","takeEvery","_marked5","_context6","_marked6","_context7","_marked7","_context8","_marked8","_context9","fork","_marked9","updateAccount","watchUpdateAccount","updateAccountFinancial","watchUpdateAccountFinancial","updateAccountCategories","watchUpdateAccountCategories","addUser","watchAddUser","getUsers","watchGetUsers","getUser","watchGetUser","deletePolicy","deleteUser","watchDeleteUser","watchDeletePolicy","watchChangePassword","addClient","watchAddClient","getClients","watchGetClients","getClientsByCategory","watchGetClientsByCategory","getClient","watchGetClient","deleteClient","watchDeleteClient","addPolicy","watchAddPolicy","getPolicy","watchGetPolicy","getSetting","watchGetSetting","updatePolicy","watchUpdatePolicy","updateClient","watchUpdateClient","userSaga","axios","data","id","fullName","_id","updateAccountFailed","saga_marked","saga_marked2","_ref2$payload","financial","updateAccountFinancialFailed","saga_marked3","saga_marked4","categories","updateAccountCategoriesSuccess","updateAccountCategoriesFailed","saga_marked5","saga_marked6","_ref4$payload","addUserSuccess","addUserFailed","saga_marked7","saga_marked8","getUsersSuccess","getUsersFailed","saga_marked9","_context10","_marked10","_ref5","_context11","getUserSuccess","getUserFailed","_marked11","_context12","_marked12","_ref6","_context13","deletePolicySuccess","deletePolicyFailed","_marked13","_ref7","_context14","deleteUserSuccess","deleteUserFailed","_marked14","_context15","_marked15","_context16","_marked16","_ref8","_ref8$payload","_context17","changePasswordSuccess","changePasswordFailed","_marked17","_context18","_marked18","_ref9","_ref9$payload","title","nricName","preferredName","nric_passport","dob","nextFollowUpDate","lastpurchasae","contact","contact2","race","nationality","familyrelationship","address","gender","category","family","annualExpense","monthlyExpense","annualShortTermSavings","monthlyShortTermSavings","annualIncome","monthlyIncome","companyaddress","companyname","occupation","referredsource","othersource","remarks","fileList","files","file","_context19","FormData","append","originFileObj","addClientSuccess","addClientFailed","_marked19","_context20","_marked20","_ref10","searchKey","_context21","getClientsSuccess","getClientsFailed","_marked21","_context22","_marked22","_ref11","_context23","getClientsByCategorySuccess","getClientsByCategoryFailed","_marked23","_context24","_marked24","_ref12","_context25","getClientSuccess","getClientFailed","_marked25","_context26","_marked26","_ref13","_context27","deleteClientFailed","_marked27","_context28","_marked28","_ref14","_policy","_ref14$payload","policyName","policyNumber","policyType","policyStartDate","ageIncepted","policyEndAge","policyDuration","premiumSGD","paymentFrequency","paymentMethod","premiumEndAge","death","totalPermanentDisability","disabilityIncome","criticalIllness","earlyCriticalIllness","accidentalDeath","accidentalDisability","accidentalReimbursement","hospitalization","hospitalIncome","cashValueAge","cashValueAmount","maturityAmountAge","maturityAmount","couponPayoutFromAge","couponPayoutToAge","couponPayoutAnnualAmount","investmentValueAge1","investmentValueAge2","investmentValueAge3","investmentValueAmount1","investmentValueAmount2","investmentValueAmount3","other","_context29","defineProperty","benefit","config","addPolicySuccess","addPolicyFailed","_marked29","_context30","_marked30","_ref15","_context31","getPolicySuccess","getPolicyFailed","_marked31","_context32","_marked32","_ref16","_context33","objectDestructuringEmpty","getSettingSuccess","getSettingFailed","_marked33","_context34","_marked34","_ref17","_ref17$payload","benefitId","_context35","updatePolicyFailed","_marked35","_context36","_marked36","_ref18","_ref18$payload","undeleted","_context37","updateClientFailed","_marked37","_context38","_marked38","_context39","_marked39","_addCompany","_getCompanies","_createColumn","_updateCompany","_getCompany","watchAddCompany","watchGetCompanies","watchGetCompany","watchCreateColumn","watchUpdateCompany","companySaga","addCompanySuccess","company_saga_marked","company_saga_marked2","createColumnSuccess","company_saga_marked3","company_saga_marked4","editCompanySuccess","company_saga_marked5","company_saga_marked6","company_saga_marked7","company_saga_marked8","company_saga_marked9","saga_marked10","saga_marked11","rootSaga","getState","CompanySaga","sagas_marked","sagaMiddleware","createSagaMiddleware","middlewares","src_store","store","initialState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducers","applyMiddleware","run","sagas","configureStore","decodedToken","currentTime","Date","now","exp","dispatch","ReactDOM","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","react_cookie__WEBPACK_IMPORTED_MODULE_0__","warn","get","parse","addCompany","getCompanies","getCompany","createColumn","setActive","updateCompany","avatar","defaults","common"],"mappings":"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AgI,EACAC,EACAC,EACA5P,EACA6P,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAtD,EACAuD,EACAU,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACArB,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAc,GAtCuB,MAuCP,CAChBvZ,KAAMnC,IACNoC,QAAS,CACPoP,KACAgI,aACAC,eACAC,aACA5P,UACA6P,kBACAC,cACAC,eACAC,iBACAC,aACAC,mBACAC,gBACAC,gBACAtD,UACAuD,QACAU,eACAC,kBACAC,oBACAC,iBACAC,sBACAC,oBACAC,2BACAC,sBACAC,sBACAC,sBACAC,yBACAC,yBACAC,yBACArB,2BACAC,mBACAC,kBACAC,uBACAC,kBACAC,uBACAC,0BACAC,kBACAC,iBACAc,WAISK,EAAmB,SAACzS,GAAD,MAA6B,CAC3DnH,KAAMlC,IACNmC,QAASkH,IAGE0S,EAAkB,SAAC1a,GAAD,MAAgC,CAC7Da,KAAMjC,IACNkC,QAASd,IAGEuP,EAAY,SAACW,GAAD,MAA6B,CACpDrP,KAAMhC,IACNiC,QAASoP,IAGE8K,EAAmB,SAAChT,GAAD,MAA6B,CAC3DnH,KAAM/B,IACNgC,QAASkH,IAGEiT,EAAkB,SAACjb,GAAD,MAAgC,CAC7Da,KAAM9B,IACN+B,QAASd,IAGEyP,EAAa,iBAAmB,CAC3C5O,KAAMtC,IACNuC,QAAS,OAGE0a,EAAoB,SAAClT,GAAD,MAA8B,CAC7DzH,KAAMrC,IACNsC,QAASwH,IAGEmT,GAAmB,SAACzb,GAAD,MAAgC,CAC9Da,KAAMpC,IACNqC,QAASd,IAGE2P,GAAe,SAC1BO,EACAgI,EACAC,EACAC,EACA5P,EACA6P,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAW,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACA7E,EACAyG,EACAlD,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAc,GAvC0B,MAwCV,CAChBvZ,KAAM7B,KACN8B,QAAS,CACPoP,KACAgI,aACAC,eACAC,aACA5P,UACA6P,kBACAC,cACAC,eACAC,iBACAC,aACAC,mBACAC,gBACAC,gBACAW,eACAC,kBACAC,oBACAC,iBACAC,sBACAC,oBACAC,2BACAC,sBACAC,sBACAC,sBACAC,yBACAC,yBACAC,yBACA7E,UAEAyG,YACAlD,QACAC,2BACAC,mBACAC,kBACAC,uBACAC,kBACAC,uBACAC,0BACAC,kBACAC,iBACAc,WAISnS,GAAsB,SAACD,GAAD,MAAkC,CACnEnH,KAAM5B,KACN6B,QAASkH,IAGEiU,GAAqB,SAACjc,GAAD,MAAgC,CAChEa,KAAM3B,KACN4B,QAASd,IAGE6P,GAAe,SAC1BK,EACAyD,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAhT,EACAiT,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAE,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAiH,EACAhH,GA/B0B,MAgCV,CAChB1U,KAAM1B,KACN2B,QAAS,CACPoP,KACAyD,QACAC,WACAC,gBACAC,gBACAC,MACAC,mBACAC,gBACAhT,QACAiT,UACAC,WACAC,OACAC,cACAC,qBACAC,UACAC,SACAE,SACAC,gBACAC,iBACAC,yBACAC,0BACAC,eACAC,gBACAC,iBACAC,cACAC,aACAC,iBACAC,cACAC,UACAiH,YACAhH,cAISrN,GAAsB,SAACL,GAAD,MAAkC,CACnEhH,KAAMzB,KACN0B,QAAS+G,IAGE4U,GAAqB,SAACzc,GAAD,MAAgC,CAChEa,KAAMxB,KACNyB,QAASd,wBCjqBX,IAAMgQ,EAAQzQ,EAAQ,IAUtBE,EAAOC,QARP,SAA2BC,GACrBA,EACFqQ,EAAMsR,SAASrY,QAAQsY,OAAvB,wBAAA7V,OAA2D/L,UAEpDqQ,EAAMsR,SAASrY,QAAQsY,OAAvB","file":"static/js/main.11308704.chunk.js","sourcesContent":["/* AUTH */\nexport const LOGIN_USER = 'LOGIN_USER';\nexport const LOGIN_USER_SUCCESS = 'LOGIN_USER_SUCCESS';\nexport const LOGIN_USER_FAILED = 'LOGIN_USER_FAILED';\n\nexport const REGISTER_USER = 'REGISTER_USER';\nexport const REGISTER_USER_SUCCESS = 'REGISTER_USER_SUCCESS';\nexport const REGISTER_USER_FAILED = 'REGISTER_USER_FAILED';\n\nexport const LOGOUT_USER = 'LOGOUT_USER';\n\nexport const FORGET_PASSWORD = 'FORGET_PASSWORD';\nexport const FORGET_PASSWORD_SUCCESS = 'FORGET_PASSWORD_SUCCESS';\nexport const FORGET_PASSWORD_FAILED = 'FORGET_PASSWORD_FAILED';\n\nexport const UPDATE_ACCOUNT = 'UPDATE_ACCOUNT';\nexport const UPDATE_ACCOUNT_SUCCESS = 'UPDATE_ACCOUNT_SUCCESS';\nexport const UPDATE_ACCOUNT_FAILED = 'UPDATE_ACCOUNT_FAILED';\n\n\nexport const UPDATE_ACCOUNT_FINANCIAL = 'UPDATE_ACCOUNT_FINANCIAL';\nexport const UPDATE_ACCOUNT_FINANCIAL_SUCCESS = 'UPDATE_ACCOUNT_FINANCIAL_SUCCESS';\nexport const UPDATE_ACCOUNT_FINANCIAL_FAILED = 'UPDATE_ACCOUNT_FINANCIAL_FAILED';\n\nexport const UPDATE_ACCOUNT_CATEGORY = 'UPDATE_ACCOUNT_CATEGORY';\nexport const UPDATE_ACCOUNT_CATEGORY_SUCCESS = 'UPDATE_ACCOUNT_CATEGORY_SUCCESS';\nexport const UPDATE_ACCOUNT_CATEGORY_FAILED = 'UPDATE_ACCOUNT_CATEGORY_FAILED';\n\nexport const GET_COMPANIES = 'GET_COMPANIES';\nexport const ADD_COMPANY = 'ADD_COMPANY';\nexport const ADD_COMPANY_SUCCESS = 'ADD_COMPANY_SUCCESS';\nexport const GET_COMPANY = 'GET_COMPANY';\nexport const GET_COMPANY_SUCCESS = 'GET_COMPANY_SUCCESS';\nexport const CREATE_COLUMN = 'CREATE_COLUMN';\nexport const CREATE_COLUMN_SUCCESS = 'CREATE_COLUMN_SUCCESS';\nexport const SET_ACTIVE = 'SET_ACTIVE';\nexport const UPDATE_COMPANY = 'UPDATE_COMPANY';\n\nexport const ADD_USER = 'ADD_USER';\nexport const ADD_USER_SUCCESS = 'ADD_USER_SUCCESS';\nexport const ADD_USER_FAILED = 'ADD_USER_FAILED';\n\nexport const GET_USERS = 'GET_USERS';\nexport const GET_USERS_SUCCESS = 'GET_USERS_SUCCESS';\nexport const GET_USERS_FAILED = 'GET_USERS_FAILED';\n\nexport const GET_USER = 'GET_USER';\nexport const GET_USER_SUCCESS = 'GET_USER_SUCCESS';\nexport const GET_USER_FAILED = 'GET_USER_FAILED';\n\nexport const DELETE_POLICY = 'DELETE_POLICY';\nexport const DELETE_POLICY_SUCCESS = 'DELETE_POLICY_SUCCESS';\nexport const DELETE_POLICY_FAILED = 'DELETE_POLICY_FAILED';\n\nexport const DELETE_USER = 'DELETE_USER';\nexport const DELETE_USER_SUCCESS = 'DELETE_USER_SUCCESS';\nexport const DELETE_USER_FAILED = 'DELETE_USER_FAILED';\n\nexport const CHANGE_PASSWORD = 'CHANGE_PASSWORD';\nexport const CHANGE_PASSWORD_SUCCESS = 'CHANGE_PASSWORD_SUCCESS';\nexport const CHANGE_PASSWORD_FAILED = 'CHANGE_PASSWORD_FAILED';\n\nexport const ADD_CLIENT = 'ADD_CLIENT';\nexport const ADD_CLIENT_SUCCESS = 'ADD_CLIENT_SUCCESS';\nexport const ADD_CLIENT_FAILED = 'ADD_CLIENT_FAILED';\n\nexport const GET_CLIENTS = 'GET_CLIENTS';\nexport const GET_CLIENTS_SUCCESS = 'GET_CLIENTS_SUCCESS';\nexport const GET_CLIENTS_FAILED = 'GET_CLIENTS_FAILED';\n\nexport const GET_CLIENTS_CATEGORY = 'GET_CLIENTS_CATEGORY';\nexport const GET_CLIENTS_CATEGORY_SUCCESS = 'GET_CLIENTS_CATEGORY_SUCCESS';\nexport const GET_CLIENTS_CATEGORY_FAILED = 'GET_CLIENTS_CATEGORY_FAILED';\n\nexport const GET_CLIENT = 'GET_CLIENT';\nexport const GET_CLIENT_SUCCESS = 'GET_CLIENT_SUCCESS';\nexport const GET_CLIENT_FAILED = 'GET_CLIENT_FAILED';\n\nexport const DELETE_CLIENT = 'DELETE_CLIENT';\nexport const DELETE_CLIENT_SUCCESS = 'DELETE_CLIENT_SUCCESS';\nexport const DELETE_CLIENT_FAILED = 'DELETE_CLIENT_FAILED';\n\nexport const GET_SETTING = 'GET_SETTING';\nexport const GET_SETTING_SUCCESS = 'GET_SETTING_SUCCESS';\nexport const GET_SETTING_FAILED = 'GET_SETTING_FAILED';\n\nexport const ADD_POLICY = 'ADD_POLICY';\nexport const ADD_POLICY_SUCCESS = 'ADD_POLICY_SUCCESS';\nexport const ADD_POLICY_FAILED = 'ADD_POLICY_FAILED';\n\nexport const GET_POLICY = 'GET_POLICY';\nexport const GET_POLICY_SUCCESS = 'GET_POLICY_SUCCESS';\nexport const GET_POLICY_FAILED = 'GET_POLICY_FAILED';\n\nexport const UPDATE_POLICY = 'UPDATE_POLICY';\nexport const UPDATE_POLICY_SUCCESS = 'UPDATE_POLICY_SUCCESS';\nexport const UPDATE_POLICY_FAILED = 'UPDATE_POLICY_FAILED';\n\nexport const UPDATE_CLIENT = 'UPDATE_CLIENT';\nexport const UPDATE_CLIENT_SUCCESS = 'UPDATE_CLIENT_SUCCESS';\nexport const UPDATE_CLIENT_FAILED = 'UPDATE_CLIENT_FAILED';","/* global localStorage */\nconst jwt = require(\"jsonwebtoken\");\nconst setTokenToHeaders = require(\"./setTokenToHeaders\");\n\nfunction prepareUserFromToken(token) {\n  if (token) {\n    localStorage.setItem(\"token\", token);\n    setTokenToHeaders(token);\n    return jwt.decode(token);\n  } else {\n    console.error(\n      \"ERROR: redux: prepareUserFromToken did not receive a token:\",\n      token\n    );\n    return null;\n  }\n}\n\nmodule.exports = prepareUserFromToken;\n","// @flow\nimport {\n    LOGIN_USER,\n    LOGIN_USER_SUCCESS,\n    LOGIN_USER_FAILED,\n    LOGOUT_USER,\n    REGISTER_USER,\n    REGISTER_USER_SUCCESS,\n    REGISTER_USER_FAILED,\n    FORGET_PASSWORD,\n    FORGET_PASSWORD_SUCCESS,\n    FORGET_PASSWORD_FAILED\n} from '../../constants/actionTypes';\n\ntype AuthAction = { type: string, payload: {} | string };\n\nexport const loginUser = (username: string, password: string): AuthAction => ({\n    type: LOGIN_USER,\n    payload: { username, password }\n});\n\nexport const loginUserSuccess = (user: any): AuthAction => ({\n    type: LOGIN_USER_SUCCESS,\n    payload: user\n});\n\nexport const loginUserFailed = (error: string): AuthAction => ({\n    type: LOGIN_USER_FAILED,\n    payload: error\n});\n\nexport const registerUser = (fullname: string, email: string, password: string): AuthAction => ({\n    type: REGISTER_USER,\n    payload: { fullname, email, password }\n});\n\nexport const registerUserSuccess = (user: {}): AuthAction => ({\n    type: REGISTER_USER_SUCCESS,\n    payload: user\n});\n\nexport const registerUserFailed = (error: string): AuthAction => ({\n    type: REGISTER_USER_FAILED,\n    payload: error\n});\n\nexport const logoutUser = (history: any): AuthAction => ({\n    type: LOGOUT_USER,\n    payload: { history }\n});\n\nexport const forgetPassword = (username: string): AuthAction => ({\n    type: FORGET_PASSWORD,\n    payload: { username }\n});\n\nexport const forgetPasswordSuccess = (passwordResetStatus: string): AuthAction => ({\n    type: FORGET_PASSWORD_SUCCESS,\n    payload: passwordResetStatus\n});\n\nexport const forgetPasswordFailed = (error: string): AuthAction => ({\n    type: FORGET_PASSWORD_FAILED,\n    payload: error\n});","import React from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport { Route } from 'react-router-dom';\n\nimport { isUserAuthenticated, getLoggedInUser } from './helpers/authUtils';\n\n// lazy load all the views\nconst Dashboard = React.lazy(() => import('./pages/dashboards/'));\nconst Users = React.lazy(() => import('./pages/users/'));\nconst AddUser = React.lazy(() => import('./pages/users/add'));\nconst UpdateAccount = React.lazy(() => import('./pages/users/updateAccount'));\nconst ChangePassword = React.lazy(() => import('./pages/users/changePassword'));\nconst Settings = React.lazy(() => import('./pages/settings/'));\nconst EditCompany = React.lazy(() => import('./pages/settings/edit'));\nconst Clients = React.lazy(() => import('./pages/clients/'));\nconst AddClient = React.lazy(() => import('./pages/clients/add'));\nconst ViewClient = React.lazy(() => import('./pages/clients/view'));\nconst DeleteClient = React.lazy(()=> console.log(\"delete\") );\nconst EditClient = React.lazy(() => import('./pages/clients/editClient'));\nconst EditPolicy = React.lazy(() => import('./pages/clients/editPolicy'));\n\n// auth\nconst Login = React.lazy(() => import('./pages/auth/Login'));\nconst Logout = React.lazy(() => import('./pages/auth/Logout'));\nconst ForgetPassword = React.lazy(() => import('./pages/account/ForgetPassword'));\nconst Register = React.lazy(() => import('./pages/account/Register'));\nconst ConfirmAccount = React.lazy(() => import('./pages/account/Confirm'));\n\n// handle auth and authorization\n\nconst PrivateRoute = ({ component: Component, roles, ...rest }) => (\n  <Route {...rest} render={props => {\n    const isAuthTokenValid = isUserAuthenticated();\n    if (!isAuthTokenValid) {\n      // not logged in so redirect to login page with the return url\n      return <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\n    }\n\n    const loggedInUser = getLoggedInUser();\n    // check if route is restricted by role\n    if (roles && roles.indexOf(loggedInUser.role) === -1) {\n      // role not authorised so redirect to home page\n      return <Redirect to={{ pathname: '/' }} />\n    }\n\n    // authorised so return component\n    return <Component {...props} />\n  }} />\n)\n\nconst routes = [\n  // auth and account\n  { path: '/login', name: 'Login', component: Login, route: Route },\n  { path: '/logout', name: 'Logout', component: Logout, route: Route },\n  { path: '/forget-password', name: 'Forget Password', component: ForgetPassword, route: Route },\n  { path: '/register', name: 'Register', component: Register, route: Route },\n  { path: '/confirm', name: 'Confirm', component: ConfirmAccount, route: Route },\n\n  // other pages\n  { path: '/dashboard', name: 'Dashboard', component: Dashboard, route: PrivateRoute, roles: ['admin', 'staff'] },\n  { path: '/update-account', name: 'UpdateAccount', component: UpdateAccount, route: PrivateRoute, roles: ['admin', 'staff'] },\n  { path: '/users', exact: true, name: 'Users', component: Users, route: PrivateRoute, roles: ['admin'] },\n  { path: '/users/add', exact: true, name: 'AddUser', component: AddUser, route: PrivateRoute, roles: ['admin'] },\n  { path: '/users/:id/update-account', exact: true, name: 'ChangePassword', component: ChangePassword, route: PrivateRoute, roles: ['admin'] },\n  { path: '/settings', exact: true, name: 'Settings', component: Settings, route: PrivateRoute, roles: ['admin', 'staff'] },\n  { path: '/settings/:id/edit-company', exact: true, name: 'EditCompany', component: EditCompany, route: PrivateRoute, roles: ['admin'] },\n  { path: '/clients', exact: true, name: 'Clients', component: Clients, route: PrivateRoute, roles: ['admin', 'staff'] },\n  { path: '/clients/add', exact: true, name: 'AddClient', component: AddClient, route: PrivateRoute, roles: ['admin', 'staff'] },\n  { path: '/clients/:id/view', exact: true, name: 'ViewClient', component: ViewClient, route: PrivateRoute, roles: ['admin', 'staff'] },\n  { path: '/clients/:id/delete', exact: true, name: 'DeleteClient', component: DeleteClient, route: PrivateRoute, roles: ['admin', 'staff'] },\n  { path: '/clients/:id/policy/:policyId/update', exact: true, name: 'EditPolicy', component: EditPolicy, route: PrivateRoute, roles: ['admin', 'staff'] },\n  { path: '/clients/:id/edit', exact: true, name: 'EditPolicy', component: EditClient, route: PrivateRoute, roles: ['admin', 'staff'] },,\n  {\n    path: \"/\",\n    exact: true,\n    component: () => <Redirect to=\"/dashboard\" />,\n    route: PrivateRoute\n  },\n\n]\n\nexport { routes, PrivateRoute };\n","import React, { Component, Suspense } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Loadable from 'react-loadable';\n\nimport { routes } from './routes';\n\n// setup fake backend\n// import { configureFakeBackend } from './helpers';\nimport { isUserAuthenticated } from './helpers/authUtils';\n\n// Themes\nimport './assets/scss/DefaultTheme.scss';\nimport 'antd/dist/antd.css';\n\n// Lazy loading and code splitting -\n// Derieved idea from https://blog.logrocket.com/lazy-loading-components-in-react-16-6-6cea535c0b52\nconst loading = () => <div></div>\n\n// All layouts/containers\nconst NonAuthLayout = Loadable({\n  loader: () => import('./components/NonAuthLayout'),\n  render(loaded, props) {\n    let Component = loaded.default;\n    return <Component {...props} />;\n  },\n  loading\n});\n\nconst AuthLayout = Loadable({\n  loader: () => import('./components/AuthLayout'),\n  render(loaded, props) {\n    let Component = loaded.default;\n    return <Component {...props} />;\n  },\n  loading\n});\n\n// configure fake backend\n// configureFakeBackend();\n\n/**\n * Exports the component with layout wrapped to it\n * @param {} WrappedComponent\n */\nconst withLayout = (WrappedComponent) => {\n  const HOC = class extends Component {\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  };\n\n  return connect()(HOC);\n}\n\n\n\n/**\n * Main app component\n */\nclass App extends Component {\n  /**\n * Returns the layout component based on different properties\n * @param {*} props\n */\n  getLayout = () => {\n    return isUserAuthenticated() ? AuthLayout : NonAuthLayout;\n  }\n\n  render() {\n    return (\n      // rendering the router with layout\n      <BrowserRouter>\n        <React.Fragment>\n          {routes.map((route, index) => {\n            return (\n              <route.route\n                key={index}\n                path={route.path}\n                exact={route.exact}\n                roles={route.roles}\n                component={withLayout(props => {\n                  const Layout = this.getLayout();\n                  return (\n                    <Suspense fallback={loading()}>\n                      <Layout {...props}>\n                        <route.component {...props} />\n                      </Layout>\n                    </Suspense>\n                  );\n                })}\n              />\n            );\n          })}\n        </React.Fragment>\n      </BrowserRouter>\n    );\n  }\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuthenticated: state.Auth.isAuthenticated\n  }\n}\n\nexport default connect(mapStateToProps, null)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// @flow\nimport {\n    LOGIN_USER,\n    LOGIN_USER_SUCCESS,\n    LOGIN_USER_FAILED,\n    LOGOUT_USER,\n    REGISTER_USER,\n    REGISTER_USER_SUCCESS,\n    REGISTER_USER_FAILED,\n    FORGET_PASSWORD,\n    FORGET_PASSWORD_SUCCESS,\n    FORGET_PASSWORD_FAILED\n} from '../../constants/actionTypes';\n\nimport { getLoggedInUser } from '../../helpers/authUtils';\n\nconst INIT_STATE = {\n    user: getLoggedInUser(),\n    loading: false\n};\n\ntype AuthAction = { type: string, payload: {} | string };\ntype State = { user?: {} | null, loading?: boolean, +value?: boolean };\n\nconst Auth = (state:State = INIT_STATE, action: AuthAction) => {\n    switch (action.type) {\n        case LOGIN_USER:\n            return { ...state, loading: true };\n        case LOGIN_USER_SUCCESS:\n            return { ...state, user: action.payload, loading: false, error: null };\n        case LOGIN_USER_FAILED:\n            return { ...state, error: action.payload, loading: false };\n        case REGISTER_USER:\n            return { ...state, loading: true };\n        case REGISTER_USER_SUCCESS:\n            return { ...state, user: action.payload, loading: false, error: null };\n        case REGISTER_USER_FAILED:\n            return { ...state, error: action.payload, loading: false };\n        case LOGOUT_USER:\n            return { ...state, user: null };\n        case FORGET_PASSWORD:\n            return { ...state, loading: true };\n        case FORGET_PASSWORD_SUCCESS:\n            return { ...state, passwordResetStatus: action.payload, loading: false, error: null };\n        case FORGET_PASSWORD_FAILED:\n            return { ...state, error: action.payload, loading: false };\n        default: return { ...state };\n    }\n}\n\nexport default Auth;","// @flow\nimport {\n    UPDATE_ACCOUNT,\n    UPDATE_ACCOUNT_SUCCESS,\n    UPDATE_ACCOUNT_FAILED,\n\n    UPDATE_ACCOUNT_CATEGORY,\n    UPDATE_ACCOUNT_CATEGORY_SUCCESS,\n    UPDATE_ACCOUNT_CATEGORY_FAILED,\n\n    UPDATE_ACCOUNT_FINANCIAL,\n    UPDATE_ACCOUNT_FINANCIAL_FAILED,\n    UPDATE_ACCOUNT_FINANCIAL_SUCCESS,\n    \n    ADD_USER,\n    ADD_USER_SUCCESS,\n    ADD_USER_FAILED,\n\n    GET_USERS,\n    GET_USERS_SUCCESS,\n    GET_USERS_FAILED,\n\n    GET_USER,\n    GET_USER_SUCCESS,\n    GET_USER_FAILED,\n\n    DELETE_POLICY,\n    DELETE_POLICY_SUCCESS,\n    DELETE_POLICY_FAILED,\n\n    DELETE_USER,\n    DELETE_USER_SUCCESS,\n    DELETE_USER_FAILED,\n    \n    CHANGE_PASSWORD,\n    CHANGE_PASSWORD_SUCCESS,\n    CHANGE_PASSWORD_FAILED,\n\n    ADD_CLIENT,\n    ADD_CLIENT_SUCCESS,\n    ADD_CLIENT_FAILED,\n\n    GET_CLIENTS,\n    GET_CLIENTS_SUCCESS,\n    GET_CLIENTS_FAILED,\n    \n    GET_CLIENTS_CATEGORY,\n    GET_CLIENTS_CATEGORY_SUCCESS,\n    GET_CLIENTS_CATEGORY_FAILED,\n\n    GET_CLIENT,\n    GET_CLIENT_SUCCESS,\n    GET_CLIENT_FAILED,\n\n    ADD_POLICY,\n    ADD_POLICY_SUCCESS,\n    ADD_POLICY_FAILED,\n\n    GET_POLICY,\n    GET_POLICY_SUCCESS,\n    GET_POLICY_FAILED,\n\n    GET_SETTING,\n    GET_SETTING_SUCCESS,\n    GET_SETTING_FAILED,\n\n    UPDATE_POLICY,\n    UPDATE_POLICY_SUCCESS,\n    UPDATE_POLICY_FAILED,\n\n    UPDATE_CLIENT,\n    UPDATE_CLIENT_SUCCESS,\n    UPDATE_CLIENT_FAILED,\n    \n    DELETE_CLIENT,\n    DELETE_CLIENT_SUCCESS,\n    DELETE_CLIENT_FAILED,\n} from '../../constants/actionTypes';\n\nconst INIT_STATE = {\n    loading: false,\n    updateAccountSuccess: false,\n    user: {},\n    userAdded: {},\n    users: [],\n    changePassword: false,\n    clients: [],\n    client: {},\n    clientAdded: {},\n    policyAdded: false,\n    policy: {},\n    updatePolicySuccess: false,\n    updateClientSuccess: false,\n    deleteClientSuccess: false,\n};\n\ntype UserAction = {\n    type: string,\n    payload: {} | string\n};\ntype State = {\n    users ? : [] | null,\n    clients ? : [] | null,\n    client ? : {} | null,\n    loading ? : boolean,\n    +value ? : boolean\n};\n\nconst Auth = (state: State = INIT_STATE, action: UserAction) => {\n    switch (action.type) {\n        case UPDATE_ACCOUNT:\n            return {\n                ...state, loading: true\n            };\n        case UPDATE_ACCOUNT_SUCCESS:\n            return {\n                ...state, updateAccountSuccess: action.payload, loading: false, error: null\n            };\n        case UPDATE_ACCOUNT_FAILED:\n            return {\n                ...state, error: action.payload, loading: false\n            };\n\n        case UPDATE_ACCOUNT_CATEGORY:\n            return {\n                ...state, loading: true\n            };\n        case UPDATE_ACCOUNT_CATEGORY_SUCCESS:\n            return {\n                ...state, updateAccountCategorySuccess: action.payload, loading: false, error: null\n            };\n        case UPDATE_ACCOUNT_CATEGORY_FAILED:\n            return {\n                ...state, error: action.payload, loading: false\n            };\n\n        case UPDATE_ACCOUNT_FINANCIAL:\n            return {\n                ...state, loading: true\n            };\n        case UPDATE_ACCOUNT_FINANCIAL_SUCCESS:\n            return {\n                ...state, updateAccountFinancialSuccess: action.payload, loading: false, error: null\n            };\n        case UPDATE_ACCOUNT_FINANCIAL_FAILED:\n            return {\n                ...state, error: action.payload, loading: false\n            };\n\n        case ADD_USER:\n            return {\n                ...state, loading: true\n            };\n        case ADD_USER_SUCCESS:\n            return {\n                ...state, userAdded: action.payload, loading: false, error: null\n            };\n        case ADD_USER_FAILED:\n            return {\n                ...state, error: action.payload, loading: false\n            };\n\n        case GET_USERS:\n            return {\n                ...state, loading: true\n            };\n        case GET_USERS_SUCCESS:\n            return {\n                ...state, users: action.payload, loading: false, error: null\n            };\n        case GET_USERS_FAILED:\n            return {\n                ...state, error: action.payload, loading: false\n            };\n\n        case GET_USER:\n            return {\n                ...state, loading: true\n            };\n        case GET_USER_SUCCESS:\n            return {\n                ...state, user: action.payload, loading: false, error: null\n            };\n        case GET_USER_FAILED:\n            return {\n                ...state, error: action.payload, loading: false\n            };\n\n        case DELETE_USER:\n            return {\n                ...state, loading: true\n            };\n        case DELETE_USER_SUCCESS:\n            return {\n                ...state, users: action.payload, loading: false, error: null\n            };\n        case DELETE_USER_FAILED:\n            return {\n                ...state, error: action.payload, loading: false \n            };\n\n        case DELETE_POLICY:\n            return {\n                ...state, loading: true\n            };\n        case DELETE_POLICY_SUCCESS:\n            return {\n                ...state, policyAdded: action.payload, loading: false, error: null\n            };\n        case DELETE_POLICY_FAILED:\n            return {\n                ...state, error: action.payload, loading: false \n            };\n        case CHANGE_PASSWORD:\n            return {\n                ...state, loading: true\n            };\n        case CHANGE_PASSWORD_SUCCESS:\n            return {\n                ...state, changePassword: action.payload, loading: false, error: null\n            };\n        case CHANGE_PASSWORD_FAILED:\n            return {\n                ...state, error: action.payload, loading: false\n            };\n\n        case ADD_CLIENT:\n            return {\n                ...state, loading: true\n            };\n        case ADD_CLIENT_SUCCESS:\n            return {\n                ...state, clientAdded: action.payload, loading: false, error: null\n            };\n        case ADD_CLIENT_FAILED:\n            return {\n                ...state, error: action.payload, loading: false\n            };\n\n        case GET_CLIENTS:\n            return {\n                ...state, loading: true\n            };\n        case GET_CLIENTS_SUCCESS:\n            return {\n                ...state, clients: action.payload, loading: false, error: null\n            };\n        case GET_CLIENTS_FAILED:\n            return {\n                ...state, error: action.payload, loading: false\n            };\n            \n        case GET_CLIENTS_CATEGORY:\n            return {\n                ...state, loading: true\n            };\n        case GET_CLIENTS_CATEGORY_SUCCESS:\n            return {\n                ...state, clients: action.payload, loading: false, error: null\n            };\n        case GET_CLIENTS_CATEGORY_FAILED:\n            return {\n                ...state, error: action.payload, loading: false\n            };\n\n        case GET_CLIENT:\n            return {\n                ...state, loading: true\n            };\n        case GET_CLIENT_SUCCESS:\n            return {\n                ...state, client: action.payload, loading: false, error: null\n            };\n        case GET_CLIENT_FAILED:\n            return {\n                ...state, error: action.payload, loading: false\n            };\n        default:\n            return {\n                ...state\n            };\n\n        case ADD_POLICY:\n            return {\n                ...state, loading: true\n            };\n        case ADD_POLICY_SUCCESS:\n            return {\n                ...state, policyAdded: action.payload, loading: false, error: null\n            };\n        case ADD_POLICY_FAILED:\n            return {\n                ...state, error: action.payload, loading: false\n            };\n\n        case GET_POLICY:\n            return {\n                ...state, loading: true\n            };\n        case GET_POLICY_SUCCESS:\n            return {\n                ...state, policy: action.payload, loading: false, error: null\n            };\n        case GET_POLICY_FAILED:\n            return {\n                ...state, error: action.payload, loading: false\n            };\n\n        case GET_SETTING:\n            return {\n                ...state, loading: true\n            };\n        case GET_SETTING_SUCCESS:\n            return {\n                ...state, setting: action.payload, loading: false, error: null\n            };\n        case GET_SETTING_FAILED:\n            return {\n                ...state, error: action.payload, loading: false\n            };\n\n        case UPDATE_POLICY:\n            return {\n                ...state, loading: true\n            };\n        case UPDATE_POLICY_SUCCESS:\n            return {\n                ...state, updatePolicySuccess: action.payload, loading: false, error: null\n            };\n        case UPDATE_POLICY_FAILED:\n            return {\n                ...state, error: action.payload, loading: false\n            };\n\n        case UPDATE_CLIENT:\n            return {\n                ...state, loading: true\n            };\n        case UPDATE_CLIENT_SUCCESS:\n            return {\n                ...state, updateClientSuccess: action.payload, loading: false, error: null\n            };\n        case UPDATE_CLIENT_FAILED:\n            return {\n                ...state, error: action.payload, loading: false\n            };\n        \n        case DELETE_CLIENT:\n            return {\n                ...state, loading: true\n            };\n        case DELETE_CLIENT_SUCCESS:\n            return {\n                ...state, deleteClientSuccess: action.payload, loading: false, error: null\n            }\n        case DELETE_CLIENT_FAILED:\n            return {\n                ...state, error: action.payload, loading: false\n            }\n    }\n};\n\nexport default Auth;","// @flow\nimport {\n  ADD_COMPANY,\n  ADD_COMPANY_SUCCESS,\n  GET_COMPANY_SUCCESS,\n  CREATE_COLUMN_SUCCESS,\n  SET_ACTIVE\n} from '../../constants/actionTypes';\n\n\nconst INIT_STATE = {\n  loading: false,\n  companies: [],\n  error: null,\n  company: null,\n  textarray: [],\n  outarray: [],  \n  active: 'financial',\n};\n\n\ntype CompanyAction = {\n  type: string,\n  payload: {} | string\n};\ntype State = {\n  companies?: [] | null,\n  loading?: boolean\n};\n\nconst Company = (state: State = INIT_STATE, action: CompanyAction) => {\n  switch (action.type) {\n    case ADD_COMPANY:\n      return {\n        ...state, companies: []\n      };\n    case ADD_COMPANY_SUCCESS:\n      return {\n        ...state, companies: action.payload\n      };\n    case GET_COMPANY_SUCCESS:\n      return {\n        ...state, company: action.payload\n      };\n    case CREATE_COLUMN_SUCCESS:\n      let _header = {\n        'headername': 'Header',\n        'text': 'Text',\n        'textarray': [],\n        'outarray': [],\n      }\n      for(var i=0;i<100;i++)\n      {\n        _header.textarray[i] = 0;\n        _header.outarray[i] = 0;\n      }\n      let headers = state.company.headers;\n      headers.push(_header);\n      var newCompany = {...state.company, headers}\n      return {\n        ...state, company: newCompany\n      };\n    case SET_ACTIVE:\n        return {\n          ...state, active: action.payload\n        };\n    default:\n      return state\n  }\n};\n\nexport default Company;","import { combineReducers } from 'redux';\nimport Auth from './auth/reducers';\nimport User from './user/reducers';\nimport Company from './company/reducers';\n\nexport default combineReducers({\n    Auth,\n    User,\n    Company\n});\n","// @flow\nimport { Cookies } from \"react-cookie\";\nimport { all, call, fork, put, takeEvery } from 'redux-saga/effects';\nimport prepareUserFromToken from \"../../auth/prepareUserFromToken\";\n\nimport {\n    LOGIN_USER,\n    LOGOUT_USER,\n    REGISTER_USER,\n    FORGET_PASSWORD\n} from '../../constants/actionTypes';\n\n\nimport {\n    loginUserSuccess,\n    loginUserFailed,\n    registerUserSuccess,\n    registerUserFailed,\n    forgetPasswordSuccess,\n    forgetPasswordFailed\n} from './actions';\n\n/**\n * Fetch data from given url\n * @param {*} url\n * @param {*} options\n */\nconst fetchJSON = (url, options = {}) => {\n    console.log(\"Called...\");\n    return fetch(url, options)\n        .then(response => {\n            if (!response.status === 200) {\n                throw response.json();\n            }\n            return response.json();\n        })\n        .then(json => {\n            return json;\n        })\n        .catch(error => { throw error });\n}\n\n\n/**\n * Sets the session\n * @param {*} user\n */\nconst setSession = (user) => {\n    let cookies = new Cookies();\n    if (user)\n        cookies.set(\"user\", JSON.stringify(user), { path: \"/\" });\n    else\n        cookies.remove(\"user\");\n};\n/**\n * Login the user\n * @param {*} payload - username and password\n */\n\nfunction* login({ payload: { username, password } }) {\n    const options = {\n        body: JSON.stringify({ username, password }),\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' }\n    };\n\n    try {\n        const response = yield call(fetchJSON, `${process.env.REACT_APP_API_URL}auth/login`, options);\n        if (response.token) {\n            const decoded = prepareUserFromToken(response.token);\n            setSession(decoded);\n            yield put(loginUserSuccess(decoded));\n        }\n        yield put(loginUserFailed(response.message));\n    } catch (error) {\n        let message;\n        switch (error.status) {\n            case 500: message = 'Internal Server Error'; break;\n            case 401: message = 'Invalid credentials'; break;\n            default: message = error;\n        }\n        yield put(loginUserFailed(message));\n        setSession(null);\n    }\n}\n\n\n/**\n * Logout the user\n * @param {*} param0\n */\nfunction* logout({ payload: { history } }) {\n    try {\n        setSession(null);\n        yield call(() => {\n            history.push(\"/login\");\n        });\n    } catch (error) { }\n}\n\n/**\n * Register the user\n */\nfunction* register({ payload: { fullname, email, password } }) {\n    const options = {\n        body: JSON.stringify({ fullname, email, password }),\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' }\n    };\n\n    try {\n        const response = yield call(fetchJSON, '/users/register', options);\n        yield put(registerUserSuccess(response));\n    } catch (error) {\n        let message;\n        switch (error.status) {\n            case 500: message = 'Internal Server Error'; break;\n            case 401: message = 'Invalid credentials'; break;\n            default: message = error;\n        }\n        yield put(registerUserFailed(message));\n    }\n}\n\n/**\n * forget password\n */\nfunction* forgetPassword({ payload: { username } }) {\n    const options = {\n        body: JSON.stringify({ username }),\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' }\n    };\n\n    try {\n        const response = yield call(fetchJSON, '/users/password-reset', options);\n        yield put(forgetPasswordSuccess(response.message));\n    } catch (error) {\n        let message;\n        switch (error.status) {\n            case 500: message = 'Internal Server Error'; break;\n            case 401: message = 'Invalid credentials'; break;\n            default: message = error;\n        }\n        yield put(forgetPasswordFailed(message));\n    }\n}\n\n\nexport function* watchLoginUser():any {\n    yield takeEvery(LOGIN_USER, login);\n}\n\nexport function* watchLogoutUser():any {\n    yield takeEvery(LOGOUT_USER, logout);\n}\n\nexport function* watchRegisterUser():any {\n    yield takeEvery(REGISTER_USER, register);\n}\n\nexport function* watchForgetPassword():any {\n    yield takeEvery(FORGET_PASSWORD, forgetPassword);\n}\n\nfunction* authSaga():any {\n    yield all([\n        fork(watchLoginUser),\n        fork(watchLogoutUser),\n        fork(watchRegisterUser),\n        fork(watchForgetPassword),\n    ]);\n}\n\nexport default authSaga;\n","// @flow\nimport axios from \"axios\";\nimport { all, call, fork, put, takeEvery } from \"redux-saga/effects\";\nimport {\n  UPDATE_ACCOUNT,\n  UPDATE_ACCOUNT_CATEGORY,\n  UPDATE_ACCOUNT_FINANCIAL,\n  ADD_USER,\n  GET_USERS,\n  GET_USER,\n  DELETE_USER,\n  DELETE_POLICY,\n  CHANGE_PASSWORD,\n  ADD_CLIENT,\n  GET_CLIENTS,\n  GET_CLIENTS_CATEGORY,\n  GET_CLIENT,\n  DELETE_CLIENT,\n  ADD_POLICY,\n  GET_POLICY,\n  UPDATE_POLICY,\n  UPDATE_CLIENT,\n  GET_SETTING\n} from \"../../constants/actionTypes\";\nimport {\n  updateAccountSuccess,\n  updateAccountFailed,\n  updateAccountFinancialSuccess,\n  updateAccountFinancialFailed,\n  updateAccountCategoriesSuccess,\n  updateAccountCategoriesFailed,\n  addUserSuccess,\n  addUserFailed,\n  getUsersSuccess,\n  getUsersFailed,\n  getUserSuccess,\n  getUserFailed,\n  deleteUserSuccess,  \n  deleteUserFailed,\n  deletePolicySuccess,\n  deletePolicyFailed,\n  changePasswordSuccess,\n  changePasswordFailed,\n  addClientSuccess,\n  addClientFailed,\n  getClientsSuccess,\n  getClientsFailed,\n  getClientsByCategorySuccess,\n  getClientsByCategoryFailed,\n  getClientSuccess,\n  getClientFailed,\n  deleteClientSuccess,\n  deleteClientFailed,\n  addPolicySuccess,\n  addPolicyFailed,\n  getPolicySuccess,\n  getPolicyFailed,\n  getSettingFailed,\n  getSettingSuccess,\n  updatePolicySuccess,\n  updatePolicyFailed,\n  updateClientFailed,\n  updateClientSuccess\n} from \"./actions\";\nimport { logoutUser } from \"../auth/actions\";\n\n/**\n * Fetch data from given url\n * @param {*} url\n * @param {*} options\n */\nconst fetchJSON = (url, options = {}) => {\n  return axios(url, options)\n    .then(json => {\n      return json.data;\n    })\n    .catch(error => {\n      throw error;\n    });\n};\n\nfunction* updateAccount({ payload: { id, fullName, password } }) {\n  const options = {\n    data: { fullName, password },\n    method: \"PUT\"\n  };\n\n  try {\n    const response = yield call(\n      fetchJSON,\n      `${process.env.REACT_APP_API_URL}users/${id}/account`,\n      options\n    );\n    if (response._id) {\n      yield put(updateAccountSuccess(true));\n      yield put(updateAccountSuccess(false));\n      yield put(logoutUser());\n    } else {\n      yield put(updateAccountFailed(false));\n    }\n  } catch (error) {\n    let message;\n    if (error.status === 500) {\n      message = \"Internal Server Error\";\n    } else {\n      message = error;\n    }\n    yield put(updateAccountFailed(message));\n  }\n}\n\nexport function* watchUpdateAccount(): any {\n  yield takeEvery(UPDATE_ACCOUNT, updateAccount);\n}\n\nfunction* updateAccountFinancial({ payload: { id, financial } }) {\n  const options = {\n    data: { financial },\n    method: \"PUT\"\n  };\n\n  try {\n    const response = yield call(\n      fetchJSON,\n      `${process.env.REACT_APP_API_URL}users/${id}/account`,\n      options\n    );\n    if (response._id) {\n      yield put(updateAccountFinancialSuccess(true));\n    } else {\n      yield put(updateAccountFinancialFailed(false));\n    }\n  } catch (error) {\n    let message;\n    if (error.status === 500) {\n      message = \"Internal Server Error\";\n    } else {\n      message = error;\n    }\n    yield put(updateAccountFinancialFailed(message));\n  }\n}\n\nexport function* watchUpdateAccountFinancial(): any {\n  yield takeEvery(UPDATE_ACCOUNT_FINANCIAL, updateAccountFinancial);\n}\n\nfunction* updateAccountCategories({ payload: { id, categories } }) {\n  const options = {\n    data: { categories },\n    method: \"PUT\"\n  };\n\n  try {\n    const response = yield call(\n      fetchJSON,\n      `${process.env.REACT_APP_API_URL}users/${id}/account`,\n      options\n    );\n    if (response._id) {\n      yield put(updateAccountCategoriesSuccess(true));\n    } else {\n      yield put(updateAccountCategoriesFailed(false));\n    }\n  } catch (error) {\n    let message;\n    if (error.status === 500) {\n      message = \"Internal Server Error\";\n    } else {\n      message = error;\n    }\n    yield put(updateAccountCategoriesFailed(message));\n  }\n}\n\nexport function* watchUpdateAccountCategories(): any {\n  yield takeEvery(UPDATE_ACCOUNT_CATEGORY, updateAccountCategories);\n}\n\n\nfunction* addUser({ payload: { fullName, username, role, password } }) {\n  const options = {\n    data: { fullName, username, role, password },\n    method: \"POST\"\n  };\n\n  try {\n    const response = yield call(\n      fetchJSON,\n      `${process.env.REACT_APP_API_URL}users`,\n      options\n    );\n    yield put(addUserSuccess(response));\n    yield put(addUserSuccess({}));\n  } catch (error) {\n    let message;\n    if (error.status === 500) {\n      message = \"Internal Server Error\";\n    } else {\n      message = error;\n    }\n    yield put(addUserFailed(message));\n  }\n}\n\nexport function* watchAddUser(): any {\n  yield takeEvery(ADD_USER, addUser);\n}\n\nfunction* getUsers() {\n  const options = {\n    method: \"GET\"\n  };\n\n  try {\n    const response = yield call(\n      fetchJSON,\n      `${process.env.REACT_APP_API_URL}users`,\n      options\n    );\n    yield put(getUsersSuccess(response));\n  } catch (error) {\n    let message;\n    if (error.status === 500) {\n      message = \"Internal Server Error\";\n    } else {\n      message = error;\n    }\n    yield put(getUsersFailed(message));\n  }\n}\n\nexport function* watchGetUsers(): any {\n  yield takeEvery(GET_USERS, getUsers);\n}\n\nfunction* getUser({ payload: id }) {\n  const options = {\n    method: \"GET\"\n  };\n\n  try {\n    const response = yield call(\n      fetchJSON,\n      `${process.env.REACT_APP_API_URL}users/${id}`,\n      options\n    );\n    yield put(getUserSuccess(response));\n  } catch (error) {\n    let message;\n    if (error.status === 500) {\n      message = \"Internal Server Error\";\n    } else {\n      message = error;\n    }\n    yield put(getUserFailed(message));\n  }\n}\n\nexport function* watchGetUser(): any {\n  yield takeEvery(GET_USER, getUser);\n}\n\nfunction* deletePolicy({ payload: id }) {\n  const options = {\n    method: \"DELETE\"\n  };\n\n  try {\n    const response = yield call(\n      fetchJSON,\n      `${process.env.REACT_APP_API_URL}clients/${id}/removepolicy`,\n      options\n    );\n    yield put(deletePolicySuccess(true));\n    yield put(deletePolicySuccess(false));\n  } catch (error) {\n    let message;\n    if (error.status === 500) {\n      message = \"Internal Server Error\";\n    } else {\n      message = error;\n    }\n    yield put(deletePolicyFailed(false));\n  }\n}\n\nfunction* deleteUser({ payload: id }) {\n  const options = {\n    method: \"DELETE\"\n  };\n\n  try {\n    const response = yield call(\n      fetchJSON,\n      `${process.env.REACT_APP_API_URL}users/${id}`,\n      options\n    );\n    yield put(deleteUserSuccess(response));\n  } catch (error) {\n    let message;\n    if (error.status === 500) {\n      message = \"Internal Server Error\";\n    } else {\n      message = error;\n    }\n    yield put(deleteUserFailed(message));\n  }\n}\n\nexport function* watchDeleteUser(): any {\n  yield takeEvery(DELETE_USER, deleteUser);\n}\n\nexport function* watchDeletePolicy(): any {\n  yield takeEvery(DELETE_POLICY, deletePolicy);\n}\n\nfunction* changePassword({ payload: { id, fullName, role, password } }) {\n  const options = {\n    data: { fullName, role, password },\n    method: \"PUT\"\n  };\n\n  try {\n    const response = yield call(\n      fetchJSON,\n      `${process.env.REACT_APP_API_URL}users/${id}/account`,\n      options\n    );\n    if (response._id) {\n      yield put(changePasswordSuccess(true));\n      yield put(changePasswordSuccess(false));\n    } else {\n      yield put(changePasswordSuccess(false));\n    }\n  } catch (error) {\n    let message;\n    if (error.status === 500) {\n      message = \"Internal Server Error\";\n    } else {\n      message = error;\n    }\n    yield put(changePasswordFailed(message));\n  }\n}\n\nexport function* watchChangePassword(): any {\n  yield takeEvery(CHANGE_PASSWORD, changePassword);\n}\n\nfunction* addClient({\n  payload: {\n    title,\n    nricName,\n    preferredName,\n    nric_passport,\n    dob,\n    nextFollowUpDate,\n    lastpurchasae,\n    email,\n    contact,\n    contact2,\n    race,\n    nationality,\n    familyrelationship,\n    address,\n    gender,\n    category,\n    family,\n    annualExpense,\n    monthlyExpense,\n    annualShortTermSavings,\n    monthlyShortTermSavings,\n    annualIncome,\n    monthlyIncome,\n    companyaddress,\n    companyname,\n    occupation,\n    referredsource,\n    othersource,\n    remarks,\n    fileList\n  }\n}) {\n  let data = new FormData();\n  //Append files to form data\n  // data.append(\"model\", JSON.stringify({ \"TenantId\": \"hello\", \"TenantUrl\": \"hello\", \"CertificatePassword\": \"this.state.CertificatePassword\" }));\n  //data.append(\"model\", {\"TenantId\": this.state.TenantId, \"TenantUrl\": this.state.TenantUrl, \"TenantPassword\": this.state.TenantPassword });\n\n  data.append(\n    \"client\",\n    JSON.stringify({\n      title,\n      nricName,\n      preferredName,\n      nric_passport,\n      dob,\n      nextFollowUpDate,\n      lastpurchasae,\n      email,\n      contact,\n      contact2,\n      race,\n      nationality,\n      familyrelationship,\n      address,\n      gender,\n      category,\n      family,\n      annualExpense,\n      monthlyExpense,\n      annualShortTermSavings,\n      monthlyShortTermSavings,\n      annualIncome,\n      monthlyIncome,\n      companyaddress,\n      companyname,\n      occupation,\n      referredsource,\n      othersource,\n      remarks\n    })\n  );\n\n  let files = fileList;\n  for (let i = 0; i < files.length; i++) {\n    let file = files[i].originFileObj;\n    data.append(\"file\", file, files[i].name);\n  }\n\n  const options = {\n    data,\n    method: \"POST\"\n  };\n\n  try {\n    const response = yield call(\n      fetchJSON,\n      `${process.env.REACT_APP_API_URL}clients`,\n      options\n    );\n    yield put(addClientSuccess(response));\n    yield put(addClientSuccess({}));\n  } catch (error) {\n    let message;\n    if (error.status === 500) {\n      message = \"Internal Server Error\";\n    } else {\n      message = error;\n    }\n    yield put(addClientFailed(message));\n  }\n}\n\nexport function* watchAddClient(): any {\n  yield takeEvery(ADD_CLIENT, addClient);\n}\n\nfunction* getClients({payload:key}) {\n  let searchKey = '';\n  if(key) {\n    searchKey = key;\n  }else {\n    searchKey = '';\n  }\n\n  const options = {\n    method: \"GET\"\n  };\n\n  try {\n    const response = yield call(\n      fetchJSON,\n      `${process.env.REACT_APP_API_URL}clients?key=` + searchKey,\n      options\n    );\n    yield put(getClientsSuccess(response));\n  } catch (error) {\n    let message;\n    if (error.status === 500) {\n      message = \"Internal Server Error\";\n    } else {\n      message = error;\n    }\n    yield put(getClientsFailed(message));\n  }\n}\n\nexport function* watchGetClients(): any {\n  yield takeEvery(GET_CLIENTS, getClients);\n}\n\nfunction* getClientsByCategory({payload:category}) {\n\n  const options = {\n    data: {category: category},\n    method: \"POST\"\n  };\n\n  try {\n    const response = yield call(\n      fetchJSON,\n      `${process.env.REACT_APP_API_URL}clients/category`,\n      options\n    );\n    yield put(getClientsByCategorySuccess(response));\n  } catch (error) {\n    let message;\n    if (error.status === 500) {\n      message = \"Internal Server Error\";\n    } else {\n      message = error;\n    }\n    yield put(getClientsByCategoryFailed(message));\n  }\n}\n\nexport function* watchGetClientsByCategory(): any {\n  yield takeEvery(GET_CLIENTS_CATEGORY, getClientsByCategory);\n}\n\nfunction* getClient({ payload: id }) {\n  const options = {\n    method: \"GET\"\n  };\n\n  try {\n    const response = yield call(\n      fetchJSON,\n      `${process.env.REACT_APP_API_URL}clients/${id}`,\n      options\n    );\n    yield put(getClientSuccess(response));\n  } catch (error) {\n    let message;\n    if (error.status === 500) {\n      message = \"Internal Server Error\";\n    } else {\n      message = error;\n    }\n    yield put(getClientFailed(message));\n  }\n}\n\nexport function* watchGetClient(): any {\n  yield takeEvery(GET_CLIENT, getClient);\n}\n\nfunction* deleteClient({ payload: id }) {\n  const options = {\n    method: \"DELETE\"\n  };\n\n  try {\n    const response = yield call(\n      fetchJSON,\n      `${process.env.REACT_APP_API_URL}clients/${id}`,\n      options\n    );\n    yield put(deleteClientSuccess(response));\n  } catch (error) {\n    let message;\n    if (error.status === 500) {\n      message = \"Internal Server Error\";\n    } else {\n      message = error;\n    }\n    yield put(deleteClientFailed(message));\n  }\n}\n\nexport function* watchDeleteClient(): any {\n  yield takeEvery(DELETE_CLIENT, deleteClient);\n}\n\n\nfunction* addPolicy({\n  payload: {\n    id,\n    policyName,\n    policyNumber,\n    policyType,\n    company,\n    policyStartDate,\n    ageIncepted,\n    policyEndAge,\n    policyDuration,\n    premiumSGD,\n    paymentFrequency,\n    paymentMethod,\n    premiumEndAge,\n    remarks,\n    death,\n    totalPermanentDisability,\n    disabilityIncome,\n    criticalIllness,\n    earlyCriticalIllness,\n    accidentalDeath,\n    accidentalDisability,\n    accidentalReimbursement,\n    hospitalization,\n    hospitalIncome,\n    cashValueAge,\n    cashValueAmount,\n    maturityAmountAge,\n    maturityAmount,\n    couponPayoutFromAge,\n    couponPayoutToAge,\n    couponPayoutAnnualAmount,\n    investmentValueAge1,\n    investmentValueAge2,\n    investmentValueAge3,\n    investmentValueAmount1,\n    investmentValueAmount2,\n    investmentValueAmount3,\n    other\n  }\n}) {\n  // let data = new FormData();\n  //Append files to form data\n  // data.append(\"model\", JSON.stringify({ \"TenantId\": \"hello\", \"TenantUrl\": \"hello\", \"CertificatePassword\": \"this.state.CertificatePassword\" }));\n  //data.append(\"model\", {\"TenantId\": this.state.TenantId, \"TenantUrl\": this.state.TenantUrl, \"TenantPassword\": this.state.TenantPassword });\n\n  // data.append(\n  //   \"policy\",\n  //   JSON.stringify({\n  //     policyName,\n  //     policyNumber,\n  //     policyType,\n  //     company,\n  //     policyStartDate,\n  //     ageIncepted,\n  //     policyEndAge,\n  //     policyDuration,\n  //     premiumSGD,\n  //     paymentFrequency,\n  //     paymentMethod,\n  //     premiumEndAge,\n  //     cashValueAge,\n  //     cashValueAmount,\n  //     remarks\n  //   })\n  // );\n  // data.append(\n  //   \"benefit\",\n  //   JSON.stringify({\n  //     death,\n  //     totalPermanentDisability,\n  //     disabilityIncome,\n  //     criticalIllness,\n  //     earlyCriticalIllness,\n  //     accidentalDeath,\n  //     accidentalDisability,\n  //     accidentalReimbursement,\n  //     hospitalization,\n  //     hospitalIncome,\n  //     other\n  //   })\n  // );\n\n  // let files = fileList;\n  // for (let i = 0; i < files.length; i++) {\n  //   let file = files[i].originFileObj;\n  //   data.append(\"file\", file, files[i].name);\n  // }\n\n  const options = {\n    data: {\n      policy: {\n        policyName,\n        policyNumber,\n        policyType,\n        company,\n        policyStartDate,\n        ageIncepted,\n        policyEndAge,\n        policyDuration,\n        premiumSGD,\n        paymentFrequency,\n        paymentMethod,\n        premiumEndAge,\n        cashValueAge,\n        cashValueAmount,\n        maturityAmountAge,\n        maturityAmount,\n        couponPayoutFromAge,\n        couponPayoutToAge,\n        couponPayoutAnnualAmount,\n        investmentValueAge1,\n        investmentValueAge2,\n        investmentValueAge3,\n        investmentValueAmount1,\n        investmentValueAmount2,\n        investmentValueAmount3,\n        maturityAmountAge,\n        maturityAmount,\n        couponPayoutFromAge,\n        couponPayoutToAge,\n        couponPayoutAnnualAmount,\n        investmentValueAge1,\n        investmentValueAge2,\n        investmentValueAge3,\n        investmentValueAmount1,\n        investmentValueAmount2,\n        investmentValueAmount3,\n        remarks\n      },\n      benefit: {\n        death,\n        totalPermanentDisability,\n        disabilityIncome,\n        criticalIllness,\n        earlyCriticalIllness,\n        accidentalDeath,\n        accidentalDisability,\n        accidentalReimbursement,\n        hospitalization,\n        hospitalIncome,\n        other\n      }\n    },\n    method: \"POST\",\n    config: {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    }\n  };\n  try {\n    yield call(\n      fetchJSON,\n      `${process.env.REACT_APP_API_URL}clients/${id}/add-policy`,\n      options\n    );\n    yield put(addPolicySuccess(true));\n    yield put(addPolicySuccess(false));\n  } catch (error) {\n    let message;\n    if (error.status === 500) {\n      message = \"Internal Server Error\";\n    } else {\n      message = error;\n    }\n    yield put(addPolicyFailed(message));\n  }\n}\n\nexport function* watchAddPolicy(): any {\n  yield takeEvery(ADD_POLICY, addPolicy);\n}\n\nfunction* getPolicy({ payload: id }) {\n  const options = {\n    method: \"GET\"\n  };\n\n  try {\n    const response = yield call(\n      fetchJSON,\n      `${process.env.REACT_APP_API_URL}clients/${id}/policy`,\n      options\n    );\n    yield put(getPolicySuccess(response));\n  } catch (error) {\n    let message;\n    if (error.status === 500) {\n      message = \"Internal Server Error\";\n    } else {\n      message = error;\n    }\n    yield put(getPolicyFailed(message));\n  }\n}\n\nexport function* watchGetPolicy(): any {\n  yield takeEvery(GET_POLICY, getPolicy);\n}\n\n\nfunction* getSetting({}) {\n  const options = {\n    method: \"GET\"\n  };\n\n  try {\n    const response = yield call(\n      fetchJSON,\n      `${process.env.REACT_APP_API_URL}settings/`,\n      options\n    );\n    yield put(getSettingSuccess(response));\n  } catch (error) {\n    let message;\n    if (error.status === 500) {\n      message = \"Internal Server Error\";\n    } else {\n      message = error;\n    }\n    yield put(getSettingFailed(message));\n  }\n}\n\nexport function* watchGetSetting(): any {\n  yield takeEvery(GET_SETTING, getSetting);\n}\n\nfunction* updatePolicy({\n  payload: {\n    id,\n    policyName,\n    policyNumber,\n    policyType,\n    company,\n    policyStartDate,\n    ageIncepted,\n    policyEndAge,\n    policyDuration,\n    premiumSGD,\n    paymentFrequency,\n    paymentMethod,\n    premiumEndAge,\n    cashValueAge,\n    cashValueAmount,\n    maturityAmountAge,\n    maturityAmount,\n    couponPayoutFromAge,\n    couponPayoutToAge,\n    couponPayoutAnnualAmount,\n    investmentValueAge1,\n    investmentValueAge2,\n    investmentValueAge3,\n    investmentValueAmount1,\n    investmentValueAmount2,\n    investmentValueAmount3,\n    remarks,\n    benefitId,\n    death,\n    totalPermanentDisability,\n    disabilityIncome,\n    criticalIllness,\n    earlyCriticalIllness,\n    accidentalDeath,\n    accidentalDisability,\n    accidentalReimbursement,\n    hospitalization,\n    hospitalIncome,\n    other\n  }\n}) {\n  const options = {\n    data: {\n      policy: {\n        policyName,\n        policyNumber,\n        policyType,\n        company,\n        policyStartDate,\n        ageIncepted,\n        policyEndAge,\n        policyDuration,\n        premiumSGD,\n        paymentFrequency,\n        paymentMethod,\n        premiumEndAge,\n        cashValueAge,\n        cashValueAmount,\n        maturityAmountAge,\n        maturityAmount,\n        couponPayoutFromAge,\n        couponPayoutToAge,\n        couponPayoutAnnualAmount,\n        investmentValueAge1,\n        investmentValueAge2,\n        investmentValueAge3,\n        investmentValueAmount1,\n        investmentValueAmount2,\n        investmentValueAmount3,\n        remarks\n      },\n      benefit: {\n        benefitId,\n        death,\n        totalPermanentDisability,\n        disabilityIncome,\n        criticalIllness,\n        earlyCriticalIllness,\n        accidentalDeath,\n        accidentalDisability,\n        accidentalReimbursement,\n        hospitalization,\n        hospitalIncome,\n        other\n      }\n    },\n    method: \"PUT\"\n  };\n\n  try {\n    const response = yield call(\n      fetchJSON,\n      `${process.env.REACT_APP_API_URL}clients/${id}/policy`,\n      options\n    );\n    if (response._id) {\n      yield put(updatePolicySuccess(true));\n      yield put(updatePolicySuccess(false));\n    } else {\n      yield put(updatePolicyFailed(false));\n    }\n  } catch (error) {\n    let message;\n    if (error.status === 500) {\n      message = \"Internal Server Error\";\n    } else {\n      message = error;\n    }\n    yield put(updatePolicyFailed(message));\n  }\n}\n\nexport function* watchUpdatePolicy(): any {\n  yield takeEvery(UPDATE_POLICY, updatePolicy);\n}\n\nfunction* updateClient({\n  payload: {\n    id,\n    title,\n    nricName,\n    preferredName,\n    nric_passport,\n    dob,\n    nextFollowUpDate,\n    lastpurchasae,\n    email,\n    contact,\n    contact2,\n    race,\n    nationality,\n    familyrelationship,\n    address,\n    gender,\n    family,\n    annualExpense,\n    monthlyExpense,\n    annualShortTermSavings,\n    monthlyShortTermSavings,\n    annualIncome,\n    monthlyIncome,\n    companyaddress,\n    companyname,\n    occupation,\n    referredsource,\n    othersource,\n    remarks,\n    undeleted,\n    fileList\n  }\n}) {\n  let data = new FormData();\n  //Append files to form data\n  // data.append(\"model\", JSON.stringify({ \"TenantId\": \"hello\", \"TenantUrl\": \"hello\", \"CertificatePassword\": \"this.state.CertificatePassword\" }));\n  //data.append(\"model\", {\"TenantId\": this.state.TenantId, \"TenantUrl\": this.state.TenantUrl, \"TenantPassword\": this.state.TenantPassword });\n\n  data.append(\n    \"client\",\n    JSON.stringify({\n      title,\n      nricName,\n      preferredName,\n      nric_passport,\n      dob,\n      nextFollowUpDate,\n      lastpurchasae,\n      email,\n      contact,\n      contact2,\n      race,\n      nationality,\n      familyrelationship,\n      address,\n      gender,\n      family,\n      annualExpense,\n      monthlyExpense,\n      annualShortTermSavings,\n      monthlyShortTermSavings,\n      annualIncome,\n      monthlyIncome,\n      companyaddress,\n      companyname,\n      occupation,\n      referredsource,\n      othersource,\n      remarks\n    })\n  );\ndata.append(\"undeleted\",JSON.stringify(undeleted))\n  let files = fileList;\n  for (let i = 0; i < files.length; i++) {\n    if (!files[i]._id) {\n      let file = files[i].originFileObj;\n      data.append(\"file\", file, files[i].name);\n    }\n  }\n\n  const options = {\n    data,\n    method: \"PUT\"\n  };\n\n  try {\n    const response = yield call(\n      fetchJSON,\n      `${process.env.REACT_APP_API_URL}clients/${id}`,\n      options\n    );\n    if (response._id) {\n      yield put(updateClientSuccess(true));\n      yield put(updateClientSuccess(false));\n    } else {\n      yield put(updateClientFailed(false));\n    }\n  } catch (error) {\n    let message;\n    if (error.status === 500) {\n      message = \"Internal Server Error\";\n    } else {\n      message = error;\n    }\n    yield put(updateClientFailed(message));\n  }\n}\n\nexport function* watchUpdateClient(): any {\n  yield takeEvery(UPDATE_CLIENT, updateClient);\n}\n\nfunction* userSaga(): any {\n  yield all([\n    fork(watchUpdateAccount),\n    fork(watchUpdateAccountCategories),\n    fork(watchUpdateAccountFinancial),\n    fork(watchAddUser),\n    fork(watchDeleteUser),\n    fork(watchDeletePolicy),\n    fork(watchGetUsers),\n    fork(watchGetUser),\n    fork(watchChangePassword),\n    fork(watchAddClient),\n    fork(watchGetClients),\n    fork(watchGetClientsByCategory),\n    fork(watchGetClient),\n    fork(watchDeleteClient),\n    fork(watchAddPolicy),\n    fork(watchGetPolicy),\n    fork(watchGetSetting),\n    fork(watchUpdatePolicy),\n    fork(watchUpdateClient)\n  ]);\n}\n\nexport default userSaga;\n","// @flow\nimport axios from \"axios\";\nimport { all, call, fork, put, takeEvery } from \"redux-saga/effects\";\nimport {\n  ADD_COMPANY,\n  GET_COMPANIES,\n  GET_COMPANY,\n  CREATE_COLUMN,\n  UPDATE_COMPANY,\n} from \"../../constants/actionTypes\";\nimport {\n  addCompanySuccess,\n  editCompanySuccess,\n  createColumnSuccess\n} from \"./actions\";\n\n/**\n * Fetch data from given url\n * @param {*} url\n * @param {*} options\n */\nconst fetchJSON = (url, options = {}) => {\n  return axios(url, options)\n    .then(json => {\n      return json.data;\n    })\n    .catch(error => {\n      throw error;\n    });\n};\n\nfunction* _addCompany({ payload : { company } }) {\n  \n  const options = {\n    data: { company },\n    method: \"POST\"\n  };\n  try {\n    \n    const response = yield call(\n      fetchJSON,\n      `${process.env.REACT_APP_API_URL}settings/addCompany`,\n      options\n    );\n    yield put(addCompanySuccess(response));\n\n  } catch (error) {\n    let message;\n    if (error.status === 500) {\n      message = \"Internal Server Error\";\n    } else {\n      message = error;\n    }\n    // yield put(getSettingFailed(message));\n  }\n}\n\nfunction* _getCompanies() {\n  \n  const options = {\n    method: \"GET\"\n  };\n  try {\n    const response = yield call(\n      fetchJSON,\n      `${process.env.REACT_APP_API_URL}settings/getCompany`,\n      options\n    );\n    yield put(addCompanySuccess(response));    \n\n  } catch (error) {\n    let message;\n    if (error.status === 500) {\n      message = \"Internal Server Error\";\n    } else {\n      message = error;\n    }\n  }\n}\n\nfunction* _createColumn({ payload: id }) {\n  yield put(createColumnSuccess());\n}\n\nfunction* _updateCompany({ payload : {company, id}}) {\n  const options = {\n    data: { id, company },\n    method: \"POST\"\n  };\n  console.log(\"options ==>\", options);\n  try {    \n    const response = yield call(\n      fetchJSON,\n      `${process.env.REACT_APP_API_URL}settings/updateCompany`,\n      options\n    );\n    // yield put(addCompanySuccess(response));\n\n  } catch (error) {\n    let message;\n    if (error.status === 500) {\n      message = \"Internal Server Error\";\n    } else {\n      message = error;\n    }\n  }\n}\n\nfunction* _getCompany({ payload: id }) {\n  \n  const options = {\n    method: \"GET\"\n  };\n  try {\n    const response = yield call(\n      fetchJSON,\n      `${process.env.REACT_APP_API_URL}settings/getCompany/${id}`,\n      options\n    );\n    yield put(editCompanySuccess(response));    \n\n  } catch (error) {\n    let message;\n    if (error.status === 500) {\n      message = \"Internal Server Error\";\n    } else {\n      message = error;\n    }\n  }\n}\n\nexport function* watchAddCompany(): any {\n  yield takeEvery(ADD_COMPANY, _addCompany);\n}\n\nexport function* watchGetCompanies(): any {\n  yield takeEvery(GET_COMPANIES, _getCompanies);\n}\n\nexport function* watchGetCompany(): any {\n  yield takeEvery(GET_COMPANY, _getCompany);\n}\n\nexport function* watchCreateColumn(): any {\n  yield takeEvery(CREATE_COLUMN, _createColumn);\n}\n\nexport function* watchUpdateCompany(): any {\n  yield takeEvery(UPDATE_COMPANY, _updateCompany);\n}\n\nfunction* companySaga(): any {\n  yield all([\n    fork(watchAddCompany),\n    fork(watchGetCompanies),\n    fork(watchGetCompany),\n    fork(watchCreateColumn),\n    fork(watchUpdateCompany)\n  ]);\n}\n\nexport default companySaga;\n","import { all } from 'redux-saga/effects';\nimport authSaga from './auth/saga';\nimport userSaga from './user/saga';\nimport CompanySaga from './company/saga';\n\n\nexport default function* rootSaga(getState) {\n    yield all([\n        authSaga(),\n        userSaga(),\n        CompanySaga()\n    ]);\n}\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from \"redux-saga\";\nimport reducers from './reducers';\nimport sagas from \"./sagas\";\n\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\n\nexport function configureStore(initialState) {\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n    const store = createStore(\n        reducers,\n        initialState,\n        composeEnhancers(\n            applyMiddleware(...middlewares)\n        ),\n    );\n    sagaMiddleware.run(sagas);\n    return store;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport jwt from \"jsonwebtoken\";\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux';\nimport setTokenToHeaders from \"./auth/setTokenToHeaders\";\nimport { configureStore } from './redux/store';\nimport {logoutUser} from \"./redux/auth/actions\";\n\nexport const store = configureStore();\n\nif (localStorage.token) {\n    setTokenToHeaders(localStorage.token);\n    const decodedToken = jwt.decode(localStorage.token);\n    const currentTime = Date.now() / 1000;\n\n    if (decodedToken.exp < currentTime) {\n        store.dispatch(logoutUser());\n    }\n} else {\n    // configureStore().dispatch(logoutUser());\n}\n\n\nReactDOM.render(<Provider store={store}>\n    <App />\n</Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { Cookies } from \"react-cookie\";\n\n/**\n * Checks if user is authenticated\n */\nconst isUserAuthenticated = () => {\n    const user = getLoggedInUser();\n    if (!user) {\n        return false;\n    }\n    const currentTime = Date.now() / 1000;\n    if (user.exp < currentTime) {\n        console.warn('access token expired');\n        return false;\n    }\n    else {\n        return true;\n    }\n}\n\n/**\n * Returns the logged in user\n */\nconst getLoggedInUser = () => {\n    const cookies = new Cookies();\n    const user = cookies.get(\"user\");\n    return user ? (typeof(user) == 'object'? user: JSON.parse(user)) : null;\n}\n\nexport { isUserAuthenticated, getLoggedInUser };\n","import {\n  GET_COMPANIES,\n  ADD_COMPANY,\n  ADD_COMPANY_SUCCESS,\n  GET_COMPANY,\n  GET_COMPANY_SUCCESS,\n  CREATE_COLUMN,\n  CREATE_COLUMN_SUCCESS,\n  SET_ACTIVE,\n  UPDATE_COMPANY\n} from \"../../constants/actionTypes\";\n\ntype CompanyAction = {\n  type: string,\n  payload: {} | string\n};\n\nexport const addCompany = (\n  company: string,\n): CompanyAction => ({\n  type: ADD_COMPANY,\n  payload: { company }\n});\n\nexport const addCompanySuccess = (companies: []): CompanyAction => ({\n  type: ADD_COMPANY_SUCCESS,\n  payload: companies\n});\n\nexport const editCompanySuccess = (company: []): CompanyAction => ({\n  type: GET_COMPANY_SUCCESS,\n  payload: company\n});\n\nexport const getCompanies = (): CompanyAction => ({\n  type: GET_COMPANIES\n});\n\nexport const getCompany = (id: string): CompanyAction => ({\n  type: GET_COMPANY,\n  payload: id\n});\n\nexport const createColumn = (id: string): CompanyAction => ({\n  type: CREATE_COLUMN\n});\n\nexport const createColumnSuccess = (): CompanyAction => ({\n  type: CREATE_COLUMN_SUCCESS\n});\n\nexport const setActive = (active: string): CompanyAction => ({\n  type: SET_ACTIVE,\n  payload: active\n});\n\nexport const updateCompany = (company, id): CompanyAction =>({\n  type: UPDATE_COMPANY,\n  payload: { id, company }\n});\n","import {\n  UPDATE_ACCOUNT,\n  UPDATE_ACCOUNT_SUCCESS,\n  UPDATE_ACCOUNT_FAILED,\n  UPDATE_ACCOUNT_FINANCIAL,\n  UPDATE_ACCOUNT_FINANCIAL_SUCCESS,\n  UPDATE_ACCOUNT_FINANCIAL_FAILED,\n  UPDATE_ACCOUNT_CATEGORY,\n  UPDATE_ACCOUNT_CATEGORY_SUCCESS,\n  UPDATE_ACCOUNT_CATEGORY_FAILED,\n  ADD_USER,\n  ADD_USER_SUCCESS,\n  ADD_USER_FAILED,\n  GET_USERS,\n  GET_USERS_SUCCESS,\n  GET_USERS_FAILED,\n  GET_USER,\n  GET_USER_SUCCESS,\n  GET_USER_FAILED,\n  DELETE_USER,\n  DELETE_USER_SUCCESS,\n  DELETE_USER_FAILED,\n  DELETE_POLICY,\n  DELETE_POLICY_SUCCESS,\n  DELETE_POLICY_FAILED,\n  CHANGE_PASSWORD,\n  CHANGE_PASSWORD_SUCCESS,\n  CHANGE_PASSWORD_FAILED,\n  ADD_CLIENT,\n  ADD_CLIENT_SUCCESS,\n  ADD_CLIENT_FAILED,\n  GET_CLIENTS,\n  GET_CLIENTS_SUCCESS,\n  GET_CLIENTS_FAILED,\n  GET_CLIENTS_CATEGORY,\n  GET_CLIENTS_CATEGORY_SUCCESS,\n  GET_CLIENTS_CATEGORY_FAILED,\n  GET_CLIENT,\n  GET_CLIENT_SUCCESS,\n  GET_CLIENT_FAILED,\n  DELETE_CLIENT,\n  DELETE_CLIENT_SUCCESS,\n  DELETE_CLIENT_FAILED,\n  ADD_POLICY,\n  ADD_POLICY_SUCCESS,\n  ADD_POLICY_FAILED,\n  GET_POLICY,\n  GET_POLICY_SUCCESS,\n  GET_POLICY_FAILED,\n  GET_SETTING,\n  GET_SETTING_SUCCESS,\n  GET_SETTING_FAILED,\n  UPDATE_POLICY,\n  UPDATE_POLICY_SUCCESS,\n  UPDATE_POLICY_FAILED,\n  UPDATE_CLIENT_SUCCESS,\n  UPDATE_CLIENT_FAILED,\n  UPDATE_CLIENT\n} from \"../../constants/actionTypes\";\n\ntype UserAction = {\n  type: string,\n  payload: {} | string\n};\n\nexport const updateAccount = (\n  id: string,\n  fullName: string,\n  password: string,\n  avatar: String,\n): UserAction => ({\n  type: UPDATE_ACCOUNT,\n  payload: {\n    id,\n    fullName,\n    password\n  }\n});\n\nexport const updateAccountSuccess = (updateAccount: boolean): UserAction => ({\n  type: UPDATE_ACCOUNT_SUCCESS,\n  payload: updateAccount\n});\n\nexport const updateAccountFailed = (error: string): UserAction => ({\n  type: UPDATE_ACCOUNT_FAILED,\n  payload: error\n});\n\nexport const updateAccountFinancial = (\n  id: string,\n  financial: any\n): UserAction => ({\n  type: UPDATE_ACCOUNT_FINANCIAL,\n  payload: {\n    id,\n    financial\n  }\n});\n\nexport const updateAccountFinancialSuccess = (updateAccount: boolean): UserAction => ({\n  type: UPDATE_ACCOUNT_FINANCIAL_SUCCESS,\n  payload: updateAccount\n});\n\nexport const updateAccountFinancialFailed = (error: string): UserAction => ({\n  type: UPDATE_ACCOUNT_FINANCIAL_FAILED,\n  payload: error\n});\n\nexport const updateAccountCategories = (\n  id: string,\n  categories: Array\n): UserAction => ({\n  type: UPDATE_ACCOUNT_CATEGORY,\n  payload: {\n    id,\n    categories\n  }\n});\n\nexport const updateAccountCategoriesSuccess = (updateAccount: boolean): UserAction => ({\n  type: UPDATE_ACCOUNT_CATEGORY_SUCCESS,\n  payload: updateAccount\n});\n\nexport const updateAccountCategoriesFailed = (error: string): UserAction => ({\n  type: UPDATE_ACCOUNT_CATEGORY_FAILED,\n  payload: error\n});\n\nexport const addUser = (\n  fullName: string,\n  username: string,\n  role: string,\n  password: string\n): UserAction => ({\n  type: ADD_USER,\n  payload: {\n    fullName,\n    username,\n    role,\n    password\n  }\n});\n\nexport const addUserSuccess = (user: {}): UserAction => ({\n  type: ADD_USER_SUCCESS,\n  payload: user\n});\n\nexport const addUserFailed = (error: string): UserAction => ({\n  type: ADD_USER_FAILED,\n  payload: error\n});\n\nexport const getUsers = (): UserAction => ({\n  type: GET_USERS\n});\n\nexport const getUsersSuccess = (users: []): UserAction => ({\n  type: GET_USERS_SUCCESS,\n  payload: users\n});\n\nexport const getUsersFailed = (error: string): UserAction => ({\n  type: GET_USERS_FAILED,\n  payload: error\n});\n\nexport const getUser = (id: string): UserAction => ({\n  type: GET_USER,\n  payload: id\n});\n\nexport const getUserSuccess = (user: {}): UserAction => ({\n  type: GET_USER_SUCCESS,\n  payload: user\n});\n\nexport const getUserFailed = (error: string): UserAction => ({\n  type: GET_USER_FAILED,\n  payload: error\n});\n\nexport const deleteUser = (id: string): UserAction => ({\n  type: DELETE_USER,\n  payload: id\n});\n\nexport const deleteUserSuccess = (deleteUser: boolean): UserAction => ({\n  type: DELETE_USER_SUCCESS,\n  payload: deleteUser\n});\n\nexport const deleteUserFailed = (error: string): UserAction => ({\n  type: DELETE_USER_FAILED,\n  payload: error\n});\n\nexport const deletePolicy = (id: string): UserAction =>({\n  type: DELETE_POLICY,\n  payload: id\n});\n\nexport const deletePolicySuccess = (policy: {}): UserAction => ({\n  type: DELETE_POLICY_SUCCESS,\n  payload: policy\n});\n\nexport const deletePolicyFailed = (error: string): UserAction => ({\n  type: DELETE_POLICY_FAILED,\n  payload: error\n});\n\nexport const changePassword = (\n  id: string,\n  fullName: string,\n  role: string,\n  password: string\n): UserAction => ({\n  type: CHANGE_PASSWORD,\n  payload: {\n    id,\n    fullName,\n    role,\n    password\n  }\n});\n\nexport const changePasswordSuccess = (changePassword: boolean): UserAction => ({\n  type: CHANGE_PASSWORD_SUCCESS,\n  payload: changePassword\n});\n\nexport const changePasswordFailed = (error: string): UserAction => ({\n  type: CHANGE_PASSWORD_FAILED,\n  payload: error\n});\n\nexport const addClient = (\n  title: string,\n  nricName: string,\n  preferredName: string,\n  nric_passport: string,\n  dob: string,\n  nextFollowUpDate: string,\n  lastpurchasae: string,\n  email: string,\n  contact: string,\n  contact2: string,\n  race: string,\n  nationality: string,\n  familyrelationship: string,\n  address: string,\n  gender: string,\n  category: string,\n  family: string,\n  annualExpense: string,\n  monthlyExpense: string,\n  annualShortTermSavings: string,\n  monthlyShortTermSavings: string,\n  annualIncome: string,\n  monthlyIncome: string,\n  companyaddress: string,\n  companyname: string,\n  occupation: string,\n  referredsource: string,\n  othersource: string,\n  remarks: string,\n  fileList: array,\n): UserAction => ({\n  type: ADD_CLIENT,\n  payload: {\n    title,\n    nricName,\n    preferredName,\n    nric_passport,\n    dob,\n    nextFollowUpDate,\n    lastpurchasae,\n    email,\n    contact,\n    contact2,\n    race,\n    nationality,\n    familyrelationship,\n    address,\n    gender,\n    category,\n    family,\n    annualExpense,\n    monthlyExpense,\n    annualShortTermSavings,\n    monthlyShortTermSavings,\n    annualIncome,\n    monthlyIncome,\n    companyaddress,\n    companyname,\n    occupation,\n    referredsource,\n    othersource,\n    remarks,\n    fileList,\n  }\n});\n\nexport const addClientSuccess = (client: {}): UserAction => ({\n  type: ADD_CLIENT_SUCCESS,\n  payload: client\n});\n\nexport const addClientFailed = (error: string): UserAction => ({\n  type: ADD_CLIENT_FAILED,\n  payload: error\n});\n\nexport const getClients = (key: string): UserAction => ({\n  type: GET_CLIENTS,\n  payload: key\n});\n\nexport const getClientsSuccess = (clients: []): UserAction => ({\n  type: GET_CLIENTS_SUCCESS,\n  payload: clients\n});\n\nexport const getClientsFailed = (error: string): UserAction => ({\n  type: GET_CLIENTS_FAILED,\n  payload: error\n});\n\nexport const getClientsByCategory = (category: []): UserAction => ({\n  type: GET_CLIENTS_CATEGORY,\n  payload: category\n});\n\nexport const getClientsByCategorySuccess = (clients: []): UserAction => ({\n  type: GET_CLIENTS_CATEGORY_SUCCESS,\n  payload: clients\n});\n\nexport const getClientsByCategoryFailed = (error: string): UserAction => ({\n  type: GET_CLIENTS_CATEGORY_FAILED,\n  payload: error\n});\n\n\nexport const deleteClient = (key: string): UserAction => ({\n  type: DELETE_CLIENT,\n  payload: key\n});\n\nexport const deleteClientSuccess = (deleteClient: boolean): UserAction => ({\n  type: DELETE_CLIENT_SUCCESS,\n  payload: deleteClient\n});\n\nexport const deleteClientFailed = (error: string): UserAction => ({\n  type: DELETE_CLIENT_FAILED,\n  payload: error\n});\n\nexport const getClient = (id: string): UserAction => ({\n  type: GET_CLIENT,\n  payload: id\n});\n\nexport const getClientSuccess = (client: {}): UserAction => ({\n  type: GET_CLIENT_SUCCESS,\n  payload: client\n});\n\nexport const getClientFailed = (error: string): UserAction => ({\n  type: GET_CLIENT_FAILED,\n  payload: error\n});\n\nexport const addPolicy = (\n  id: string,\n  policyName,\n  policyNumber: string,\n  policyType: string,\n  company: string,\n  policyStartDate: string,\n  ageIncepted: string,\n  policyEndAge: string,\n  policyDuration: string,\n  premiumSGD: string,\n  paymentFrequency: string,\n  paymentMethod: string,\n  premiumEndAge: string,\n  remarks: string,\n  death: string,\n  cashValueAge: string,\n  cashValueAmount: string,\n  maturityAmountAge: string,\n  maturityAmount: string,\n  couponPayoutFromAge: string,\n  couponPayoutToAge: string,\n  couponPayoutAnnualAmount: string,\n  investmentValueAge1: string,\n  investmentValueAge2: string,\n  investmentValueAge3: string,\n  investmentValueAmount1: string,\n  investmentValueAmount2: string,\n  investmentValueAmount3: string,\n  totalPermanentDisability: string,\n  disabilityIncome: string,\n  criticalIllness: string,\n  earlyCriticalIllness: string,\n  accidentalDeath: string,\n  accidentalDisability: string,\n  accidentalReimbursement: string,\n  hospitalization: string,\n  hospitalIncome: string,\n  other: string,\n): UserAction => ({\n  type: ADD_POLICY,\n  payload: {\n    id,\n    policyName,\n    policyNumber,\n    policyType,\n    company,\n    policyStartDate,\n    ageIncepted,\n    policyEndAge,\n    policyDuration,\n    premiumSGD,\n    paymentFrequency,\n    paymentMethod,\n    premiumEndAge,\n    remarks,\n    death,\n    cashValueAge,\n    cashValueAmount,\n    maturityAmountAge,\n    maturityAmount,\n    couponPayoutFromAge,\n    couponPayoutToAge,\n    couponPayoutAnnualAmount,\n    investmentValueAge1,\n    investmentValueAge2,\n    investmentValueAge3,\n    investmentValueAmount1,\n    investmentValueAmount2,\n    investmentValueAmount3,\n    totalPermanentDisability,\n    disabilityIncome,\n    criticalIllness,\n    earlyCriticalIllness,\n    accidentalDeath,\n    accidentalDisability,\n    accidentalReimbursement,\n    hospitalization,\n    hospitalIncome,\n    other\n  }\n});\n\nexport const addPolicySuccess = (policy: {}): UserAction => ({\n  type: ADD_POLICY_SUCCESS,\n  payload: policy\n});\n\nexport const addPolicyFailed = (error: string): UserAction => ({\n  type: ADD_POLICY_FAILED,\n  payload: error\n});\n\nexport const getPolicy = (id: string): UserAction => ({\n  type: GET_POLICY,\n  payload: id\n});\n\nexport const getPolicySuccess = (policy: {}): UserAction => ({\n  type: GET_POLICY_SUCCESS,\n  payload: policy\n});\n\nexport const getPolicyFailed = (error: string): UserAction => ({\n  type: GET_POLICY_FAILED,\n  payload: error\n});\n\nexport const getSetting = (): UserAction => ({\n  type: GET_SETTING,\n  payload: null\n});\n\nexport const getSettingSuccess = (setting: {}): UserAction => ({\n  type: GET_SETTING_SUCCESS,\n  payload: setting\n});\n\nexport const getSettingFailed = (error: string): UserAction => ({\n  type: GET_SETTING_FAILED,\n  payload: error\n});\n\nexport const updatePolicy = (\n  id: string,\n  policyName: string,\n  policyNumber: string,\n  policyType: string,\n  company: string,\n  policyStartDate: string,\n  ageIncepted: string,\n  policyEndAge: string,\n  policyDuration: string,\n  premiumSGD: string,\n  paymentFrequency: string,\n  paymentMethod: string,\n  premiumEndAge: string,\n  cashValueAge: string,\n  cashValueAmount: string,\n  maturityAmountAge: string,\n  maturityAmount: string,\n  couponPayoutFromAge: string,\n  couponPayoutToAge: string,\n  couponPayoutAnnualAmount: string,\n  investmentValueAge1: string,\n  investmentValueAge2: string,\n  investmentValueAge3: string,\n  investmentValueAmount1: string,\n  investmentValueAmount2: string,\n  investmentValueAmount3: string,\n  remarks: string,\n  benefitId: string,\n  death: string,\n  totalPermanentDisability: string,\n  disabilityIncome: string,\n  criticalIllness: string,\n  earlyCriticalIllness: string,\n  accidentalDeath: string,\n  accidentalDisability: string,\n  accidentalReimbursement: string,\n  hospitalization: string,\n  hospitalIncome: string,\n  other\n): UserAction => ({\n  type: UPDATE_POLICY,\n  payload: {\n    id,\n    policyName,\n    policyNumber,\n    policyType,\n    company,\n    policyStartDate,\n    ageIncepted,\n    policyEndAge,\n    policyDuration,\n    premiumSGD,\n    paymentFrequency,\n    paymentMethod,\n    premiumEndAge,\n    cashValueAge,\n    cashValueAmount,\n    maturityAmountAge,\n    maturityAmount,\n    couponPayoutFromAge,\n    couponPayoutToAge,\n    couponPayoutAnnualAmount,\n    investmentValueAge1,\n    investmentValueAge2,\n    investmentValueAge3,\n    investmentValueAmount1,\n    investmentValueAmount2,\n    investmentValueAmount3,\n    remarks,\n\n    benefitId,\n    death,\n    totalPermanentDisability,\n    disabilityIncome,\n    criticalIllness,\n    earlyCriticalIllness,\n    accidentalDeath,\n    accidentalDisability,\n    accidentalReimbursement,\n    hospitalization,\n    hospitalIncome,\n    other\n  }\n});\n\nexport const updatePolicySuccess = (policy: boolean): UserAction => ({\n  type: UPDATE_POLICY_SUCCESS,\n  payload: policy\n});\n\nexport const updatePolicyFailed = (error: string): UserAction => ({\n  type: UPDATE_POLICY_FAILED,\n  payload: error\n});\n\nexport const updateClient = (\n  id: string,\n  title: string,\n  nricName: string,\n  preferredName: string,\n  nric_passport: string,\n  dob: string,\n  nextFollowUpDate: string,\n  lastpurchasae: string,\n  email: string,\n  contact: string,\n  contact2: string,\n  race: string,\n  nationality: string,\n  familyrelationship: string,\n  address: string,\n  gender: string,\n  family: string,\n  annualExpense: string,\n  monthlyExpense: string,\n  annualShortTermSavings: string,\n  monthlyShortTermSavings: string,\n  annualIncome: string,\n  monthlyIncome: string,\n  companyaddress: string,\n  companyname: string,\n  occupation: string,\n  referredsource: string,\n  othersource: string,\n  remarks: string,\n  undeleted: array,\n  fileList: object,\n): UserAction => ({\n  type: UPDATE_CLIENT,\n  payload: {\n    id,\n    title,\n    nricName,\n    preferredName,\n    nric_passport,\n    dob,\n    nextFollowUpDate,\n    lastpurchasae,\n    email,\n    contact,\n    contact2,\n    race,\n    nationality,\n    familyrelationship,\n    address,\n    gender,\n    family,\n    annualExpense,\n    monthlyExpense,\n    annualShortTermSavings,\n    monthlyShortTermSavings,\n    annualIncome,\n    monthlyIncome,\n    companyaddress,\n    companyname,\n    occupation,\n    referredsource,\n    othersource,\n    remarks,\n    undeleted,\n    fileList,\n  }\n});\n\nexport const updateClientSuccess = (client: boolean): UserAction => ({\n  type: UPDATE_CLIENT_SUCCESS,\n  payload: client\n});\n\nexport const updateClientFailed = (error: string): UserAction => ({\n  type: UPDATE_CLIENT_FAILED,\n  payload: error\n});","const axios = require(\"axios\");\n\nfunction setTokenToHeaders(token) {\n  if (token) {\n    axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n  } else {\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n}\n\nmodule.exports = setTokenToHeaders;\n"],"sourceRoot":""}